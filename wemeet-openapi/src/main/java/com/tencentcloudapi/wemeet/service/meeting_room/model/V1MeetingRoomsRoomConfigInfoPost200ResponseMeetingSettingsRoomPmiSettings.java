/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.meeting_room.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * 会议室专属会议号配置，仅专属 ID 开启时有效。
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings {
    @JsonProperty(value = "allow_in_before_host")
    private Boolean allowInBeforeHost;

    @JsonProperty(value = "hosts")
    private List<String> hosts;

    @JsonProperty(value = "mute_enable_type_join")
    private Long muteEnableTypeJoin;

    @JsonProperty(value = "only_enterprise_user_allowed")
    private Boolean onlyEnterpriseUserAllowed;

    @JsonProperty(value = "room_pmi_psw")
    private String roomPmiPsw;

    @JsonProperty(value = "waiting_room")
    private Boolean waitingRoom;

    /**
     */
    public V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings() {
    }

    /**
     * @param allowInBeforeHost 是否允许成员在主持人进会前入会。
     */
    public V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings allowInBeforeHost(Boolean allowInBeforeHost) {
        this.allowInBeforeHost = allowInBeforeHost;
        return this;
    }
    /**
     * @return allowInBeforeHost 是否允许成员在主持人进会前入会。
     **/
    public Boolean getAllowInBeforeHost() {
        return allowInBeforeHost;
    }

    /**
     * @param allowInBeforeHost 是否允许成员在主持人进会前入会。
     */
    public void setAllowInBeforeHost(Boolean allowInBeforeHost) {
        this.allowInBeforeHost = allowInBeforeHost;
    }
    /**
     * @param hosts 会议指定主持人 ID。
     */
    public V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings hosts(List<String> hosts) {
        this.hosts = hosts;
        return this;
    }
    /**
     * @return hosts 会议指定主持人 ID。
     **/
    public List<String> getHosts() {
        return hosts;
    }

    /**
     * @param hosts 会议指定主持人 ID。
     */
    public void setHosts(List<String> hosts) {
        this.hosts = hosts;
    }
    /**
     * @param muteEnableTypeJoin 成员入会静音设置。 0：关闭 1：开启 2：超过6人自动开启
     */
    public V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings muteEnableTypeJoin(Long muteEnableTypeJoin) {
        this.muteEnableTypeJoin = muteEnableTypeJoin;
        return this;
    }
    /**
     * @return muteEnableTypeJoin 成员入会静音设置。 0：关闭 1：开启 2：超过6人自动开启
     **/
    public Long getMuteEnableTypeJoin() {
        return muteEnableTypeJoin;
    }

    /**
     * @param muteEnableTypeJoin 成员入会静音设置。 0：关闭 1：开启 2：超过6人自动开启
     */
    public void setMuteEnableTypeJoin(Long muteEnableTypeJoin) {
        this.muteEnableTypeJoin = muteEnableTypeJoin;
    }
    /**
     * @param onlyEnterpriseUserAllowed 入会成员设置。 true：仅企业内部用户可入会 false：所有人可入会
     */
    public V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings onlyEnterpriseUserAllowed(Boolean onlyEnterpriseUserAllowed) {
        this.onlyEnterpriseUserAllowed = onlyEnterpriseUserAllowed;
        return this;
    }
    /**
     * @return onlyEnterpriseUserAllowed 入会成员设置。 true：仅企业内部用户可入会 false：所有人可入会
     **/
    public Boolean getOnlyEnterpriseUserAllowed() {
        return onlyEnterpriseUserAllowed;
    }

    /**
     * @param onlyEnterpriseUserAllowed 入会成员设置。 true：仅企业内部用户可入会 false：所有人可入会
     */
    public void setOnlyEnterpriseUserAllowed(Boolean onlyEnterpriseUserAllowed) {
        this.onlyEnterpriseUserAllowed = onlyEnterpriseUserAllowed;
    }
    /**
     * @param roomPmiPsw 专属会议室密码，4-6位数字。
     */
    public V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings roomPmiPsw(String roomPmiPsw) {
        this.roomPmiPsw = roomPmiPsw;
        return this;
    }
    /**
     * @return roomPmiPsw 专属会议室密码，4-6位数字。
     **/
    public String getRoomPmiPsw() {
        return roomPmiPsw;
    }

    /**
     * @param roomPmiPsw 专属会议室密码，4-6位数字。
     */
    public void setRoomPmiPsw(String roomPmiPsw) {
        this.roomPmiPsw = roomPmiPsw;
    }
    /**
     * @param waitingRoom 是否开启等候室。
     */
    public V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings waitingRoom(Boolean waitingRoom) {
        this.waitingRoom = waitingRoom;
        return this;
    }
    /**
     * @return waitingRoom 是否开启等候室。
     **/
    public Boolean getWaitingRoom() {
        return waitingRoom;
    }

    /**
     * @param waitingRoom 是否开启等候室。
     */
    public void setWaitingRoom(Boolean waitingRoom) {
        this.waitingRoom = waitingRoom;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings v1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings = (V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings) o;
        return Objects.equals(this.allowInBeforeHost, v1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings.allowInBeforeHost) &&
            Objects.equals(this.hosts, v1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings.hosts) &&
            Objects.equals(this.muteEnableTypeJoin, v1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings.muteEnableTypeJoin) &&
            Objects.equals(this.onlyEnterpriseUserAllowed, v1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings.onlyEnterpriseUserAllowed) &&
            Objects.equals(this.roomPmiPsw, v1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings.roomPmiPsw) &&
            Objects.equals(this.waitingRoom, v1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings.waitingRoom);
    }

    @Override
    public int hashCode() {
        return Objects.hash(allowInBeforeHost, hosts, muteEnableTypeJoin, onlyEnterpriseUserAllowed, roomPmiPsw, waitingRoom);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingRoomsRoomConfigInfoPost200ResponseMeetingSettingsRoomPmiSettings {\n");
        sb.append("    allowInBeforeHost: ").append(toIndentedString(allowInBeforeHost)).append("\n");
        sb.append("    hosts: ").append(toIndentedString(hosts)).append("\n");
        sb.append("    muteEnableTypeJoin: ").append(toIndentedString(muteEnableTypeJoin)).append("\n");
        sb.append("    onlyEnterpriseUserAllowed: ").append(toIndentedString(onlyEnterpriseUserAllowed)).append("\n");
        sb.append("    roomPmiPsw: ").append(toIndentedString(roomPmiPsw)).append("\n");
        sb.append("    waitingRoom: ").append(toIndentedString(waitingRoom)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

