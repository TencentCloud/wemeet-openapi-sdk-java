/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.records.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1RecordsGet200ResponseRecordMeetingsInner
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1RecordsGet200ResponseRecordMeetingsInner {
    @JsonProperty(value = "host_user_id")
    private String hostUserId;

    @JsonProperty(value = "media_set_type")
    private Long mediaSetType;

    @JsonProperty(value = "media_start_time")
    private Long mediaStartTime;

    @JsonProperty(value = "meeting_code")
    private String meetingCode;

    @JsonProperty(value = "meeting_id")
    private String meetingId;

    @JsonProperty(value = "meeting_record_id")
    private String meetingRecordId;

    @JsonProperty(value = "record_files")
    private List<V1RecordsGet200ResponseRecordMeetingsInnerRecordFilesInner> recordFiles;

    @JsonProperty(value = "record_type")
    private Long recordType;

    @JsonProperty(value = "state")
    private Long state;

    @JsonProperty(value = "subject")
    private String subject;

    /**
     */
    public V1RecordsGet200ResponseRecordMeetingsInner() {
    }

    /**
     * @param hostUserId 主持人用户 ID。(查询会议录制文件列表接口返回。)
     */
    public V1RecordsGet200ResponseRecordMeetingsInner hostUserId(String hostUserId) {
        this.hostUserId = hostUserId;
        return this;
    }
    /**
     * @return hostUserId 主持人用户 ID。(查询会议录制文件列表接口返回。)
     **/
    public String getHostUserId() {
        return hostUserId;
    }

    /**
     * @param hostUserId 主持人用户 ID。(查询会议录制文件列表接口返回。)
     */
    public void setHostUserId(String hostUserId) {
        this.hostUserId = hostUserId;
    }
    /**
     * @param mediaSetType 会议类型，0-全部 1-外部会议 2-内部会议
     */
    public V1RecordsGet200ResponseRecordMeetingsInner mediaSetType(Long mediaSetType) {
        this.mediaSetType = mediaSetType;
        return this;
    }
    /**
     * @return mediaSetType 会议类型，0-全部 1-外部会议 2-内部会议
     **/
    public Long getMediaSetType() {
        return mediaSetType;
    }

    /**
     * @param mediaSetType 会议类型，0-全部 1-外部会议 2-内部会议
     */
    public void setMediaSetType(Long mediaSetType) {
        this.mediaSetType = mediaSetType;
    }
    /**
     * @param mediaStartTime 会议开始时间，UNIX 时间戳（单位毫秒）。
     */
    public V1RecordsGet200ResponseRecordMeetingsInner mediaStartTime(Long mediaStartTime) {
        this.mediaStartTime = mediaStartTime;
        return this;
    }
    /**
     * @return mediaStartTime 会议开始时间，UNIX 时间戳（单位毫秒）。
     **/
    public Long getMediaStartTime() {
        return mediaStartTime;
    }

    /**
     * @param mediaStartTime 会议开始时间，UNIX 时间戳（单位毫秒）。
     */
    public void setMediaStartTime(Long mediaStartTime) {
        this.mediaStartTime = mediaStartTime;
    }
    /**
     * @param meetingCode 会议 code。
     */
    public V1RecordsGet200ResponseRecordMeetingsInner meetingCode(String meetingCode) {
        this.meetingCode = meetingCode;
        return this;
    }
    /**
     * @return meetingCode 会议 code。
     **/
    public String getMeetingCode() {
        return meetingCode;
    }

    /**
     * @param meetingCode 会议 code。
     */
    public void setMeetingCode(String meetingCode) {
        this.meetingCode = meetingCode;
    }
    /**
     * @param meetingId 会议唯一 ID。
     */
    public V1RecordsGet200ResponseRecordMeetingsInner meetingId(String meetingId) {
        this.meetingId = meetingId;
        return this;
    }
    /**
     * @return meetingId 会议唯一 ID。
     **/
    public String getMeetingId() {
        return meetingId;
    }

    /**
     * @param meetingId 会议唯一 ID。
     */
    public void setMeetingId(String meetingId) {
        this.meetingId = meetingId;
    }
    /**
     * @param meetingRecordId 会议录制 ID。
     */
    public V1RecordsGet200ResponseRecordMeetingsInner meetingRecordId(String meetingRecordId) {
        this.meetingRecordId = meetingRecordId;
        return this;
    }
    /**
     * @return meetingRecordId 会议录制 ID。
     **/
    public String getMeetingRecordId() {
        return meetingRecordId;
    }

    /**
     * @param meetingRecordId 会议录制 ID。
     */
    public void setMeetingRecordId(String meetingRecordId) {
        this.meetingRecordId = meetingRecordId;
    }
    /**
     * @param recordFiles 录制文件列表。
     */
    public V1RecordsGet200ResponseRecordMeetingsInner recordFiles(List<V1RecordsGet200ResponseRecordMeetingsInnerRecordFilesInner> recordFiles) {
        this.recordFiles = recordFiles;
        return this;
    }
    /**
     * @return recordFiles 录制文件列表。
     **/
    public List<V1RecordsGet200ResponseRecordMeetingsInnerRecordFilesInner> getRecordFiles() {
        return recordFiles;
    }

    /**
     * @param recordFiles 录制文件列表。
     */
    public void setRecordFiles(List<V1RecordsGet200ResponseRecordMeetingsInnerRecordFilesInner> recordFiles) {
        this.recordFiles = recordFiles;
    }
    /**
     * @param recordType 返回的录制文件类型，0：云录制、2：上传录制
     */
    public V1RecordsGet200ResponseRecordMeetingsInner recordType(Long recordType) {
        this.recordType = recordType;
        return this;
    }
    /**
     * @return recordType 返回的录制文件类型，0：云录制、2：上传录制
     **/
    public Long getRecordType() {
        return recordType;
    }

    /**
     * @param recordType 返回的录制文件类型，0：云录制、2：上传录制
     */
    public void setRecordType(Long recordType) {
        this.recordType = recordType;
    }
    /**
     * @param state 录制状态。1：录制中，2：转码中，3：转码完成，当状态为转码完成才会返回录制文件列表。
     */
    public V1RecordsGet200ResponseRecordMeetingsInner state(Long state) {
        this.state = state;
        return this;
    }
    /**
     * @return state 录制状态。1：录制中，2：转码中，3：转码完成，当状态为转码完成才会返回录制文件列表。
     **/
    public Long getState() {
        return state;
    }

    /**
     * @param state 录制状态。1：录制中，2：转码中，3：转码完成，当状态为转码完成才会返回录制文件列表。
     */
    public void setState(Long state) {
        this.state = state;
    }
    /**
     * @param subject 会议主题。
     */
    public V1RecordsGet200ResponseRecordMeetingsInner subject(String subject) {
        this.subject = subject;
        return this;
    }
    /**
     * @return subject 会议主题。
     **/
    public String getSubject() {
        return subject;
    }

    /**
     * @param subject 会议主题。
     */
    public void setSubject(String subject) {
        this.subject = subject;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1RecordsGet200ResponseRecordMeetingsInner v1RecordsGet200ResponseRecordMeetingsInner = (V1RecordsGet200ResponseRecordMeetingsInner) o;
        return Objects.equals(this.hostUserId, v1RecordsGet200ResponseRecordMeetingsInner.hostUserId) &&
            Objects.equals(this.mediaSetType, v1RecordsGet200ResponseRecordMeetingsInner.mediaSetType) &&
            Objects.equals(this.mediaStartTime, v1RecordsGet200ResponseRecordMeetingsInner.mediaStartTime) &&
            Objects.equals(this.meetingCode, v1RecordsGet200ResponseRecordMeetingsInner.meetingCode) &&
            Objects.equals(this.meetingId, v1RecordsGet200ResponseRecordMeetingsInner.meetingId) &&
            Objects.equals(this.meetingRecordId, v1RecordsGet200ResponseRecordMeetingsInner.meetingRecordId) &&
            Objects.equals(this.recordFiles, v1RecordsGet200ResponseRecordMeetingsInner.recordFiles) &&
            Objects.equals(this.recordType, v1RecordsGet200ResponseRecordMeetingsInner.recordType) &&
            Objects.equals(this.state, v1RecordsGet200ResponseRecordMeetingsInner.state) &&
            Objects.equals(this.subject, v1RecordsGet200ResponseRecordMeetingsInner.subject);
    }

    @Override
    public int hashCode() {
        return Objects.hash(hostUserId, mediaSetType, mediaStartTime, meetingCode, meetingId, meetingRecordId, recordFiles, recordType, state, subject);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1RecordsGet200ResponseRecordMeetingsInner {\n");
        sb.append("    hostUserId: ").append(toIndentedString(hostUserId)).append("\n");
        sb.append("    mediaSetType: ").append(toIndentedString(mediaSetType)).append("\n");
        sb.append("    mediaStartTime: ").append(toIndentedString(mediaStartTime)).append("\n");
        sb.append("    meetingCode: ").append(toIndentedString(meetingCode)).append("\n");
        sb.append("    meetingId: ").append(toIndentedString(meetingId)).append("\n");
        sb.append("    meetingRecordId: ").append(toIndentedString(meetingRecordId)).append("\n");
        sb.append("    recordFiles: ").append(toIndentedString(recordFiles)).append("\n");
        sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

