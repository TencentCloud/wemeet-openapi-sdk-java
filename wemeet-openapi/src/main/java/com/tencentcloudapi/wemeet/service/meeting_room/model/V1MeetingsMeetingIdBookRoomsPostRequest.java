/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.meeting_room.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1MeetingsMeetingIdBookRoomsPostRequest
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingsMeetingIdBookRoomsPostRequest {
    @JsonProperty(value = "meeting_room_id_list", required = true)
    private List<String> meetingRoomIdList;

    @JsonProperty(value = "operator_id", required = true)
    private String operatorId;

    @JsonProperty(value = "operator_id_type", required = true)
    private Long operatorIdType;

    @JsonProperty(value = "subject_visible")
    private Boolean subjectVisible;

    /**
     * @param meetingRoomIdList 会议室ID列表 (required)
     * @param operatorId  (required)
     * @param operatorIdType  (required)
     */
    public V1MeetingsMeetingIdBookRoomsPostRequest(@NotNull List<String> meetingRoomIdList, @NotNull String operatorId, @NotNull Long operatorIdType) {
        this.meetingRoomIdList = meetingRoomIdList;
        this.operatorId = operatorId;
        this.operatorIdType = operatorIdType;
    }

    /**
     * @param meetingRoomIdList 会议室ID列表 (required)
     */
    public V1MeetingsMeetingIdBookRoomsPostRequest meetingRoomIdList(@NotNull List<String> meetingRoomIdList) {
        this.meetingRoomIdList = meetingRoomIdList;
        return this;
    }
    /**
     * @return meetingRoomIdList 会议室ID列表
     **/
    public List<String> getMeetingRoomIdList() {
        return meetingRoomIdList;
    }

    /**
     * @param meetingRoomIdList 会议室ID列表 (required)
     */
    public void setMeetingRoomIdList(List<String> meetingRoomIdList) {
        this.meetingRoomIdList = meetingRoomIdList;
    }
    /**
     * @param operatorId  (required)
     */
    public V1MeetingsMeetingIdBookRoomsPostRequest operatorId(@NotNull String operatorId) {
        this.operatorId = operatorId;
        return this;
    }
    /**
     * @return operatorId 
     **/
    public String getOperatorId() {
        return operatorId;
    }

    /**
     * @param operatorId  (required)
     */
    public void setOperatorId(String operatorId) {
        this.operatorId = operatorId;
    }
    /**
     * @param operatorIdType  (required)
     */
    public V1MeetingsMeetingIdBookRoomsPostRequest operatorIdType(@NotNull Long operatorIdType) {
        this.operatorIdType = operatorIdType;
        return this;
    }
    /**
     * @return operatorIdType 
     **/
    public Long getOperatorIdType() {
        return operatorIdType;
    }

    /**
     * @param operatorIdType  (required)
     */
    public void setOperatorIdType(Long operatorIdType) {
        this.operatorIdType = operatorIdType;
    }
    /**
     * @param subjectVisible true：在会议开始前的一小时内，在 Room 上显示会议主题。默认值为 true。 false：在会议开始前的一小时内，在 Room 上不显示会议主题。 说明：该参数并不影响预定时间晚过当前时间一个小时以上的会议。超过一小时的会议默认不显示会议主题。
     */
    public V1MeetingsMeetingIdBookRoomsPostRequest subjectVisible(Boolean subjectVisible) {
        this.subjectVisible = subjectVisible;
        return this;
    }
    /**
     * @return subjectVisible true：在会议开始前的一小时内，在 Room 上显示会议主题。默认值为 true。 false：在会议开始前的一小时内，在 Room 上不显示会议主题。 说明：该参数并不影响预定时间晚过当前时间一个小时以上的会议。超过一小时的会议默认不显示会议主题。
     **/
    public Boolean getSubjectVisible() {
        return subjectVisible;
    }

    /**
     * @param subjectVisible true：在会议开始前的一小时内，在 Room 上显示会议主题。默认值为 true。 false：在会议开始前的一小时内，在 Room 上不显示会议主题。 说明：该参数并不影响预定时间晚过当前时间一个小时以上的会议。超过一小时的会议默认不显示会议主题。
     */
    public void setSubjectVisible(Boolean subjectVisible) {
        this.subjectVisible = subjectVisible;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingsMeetingIdBookRoomsPostRequest v1MeetingsMeetingIdBookRoomsPostRequest = (V1MeetingsMeetingIdBookRoomsPostRequest) o;
        return Objects.equals(this.meetingRoomIdList, v1MeetingsMeetingIdBookRoomsPostRequest.meetingRoomIdList) &&
            Objects.equals(this.operatorId, v1MeetingsMeetingIdBookRoomsPostRequest.operatorId) &&
            Objects.equals(this.operatorIdType, v1MeetingsMeetingIdBookRoomsPostRequest.operatorIdType) &&
            Objects.equals(this.subjectVisible, v1MeetingsMeetingIdBookRoomsPostRequest.subjectVisible);
    }

    @Override
    public int hashCode() {
        return Objects.hash(meetingRoomIdList, operatorId, operatorIdType, subjectVisible);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingsMeetingIdBookRoomsPostRequest {\n");
        sb.append("    meetingRoomIdList: ").append(toIndentedString(meetingRoomIdList)).append("\n");
        sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
        sb.append("    operatorIdType: ").append(toIndentedString(operatorIdType)).append("\n");
        sb.append("    subjectVisible: ").append(toIndentedString(subjectVisible)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

