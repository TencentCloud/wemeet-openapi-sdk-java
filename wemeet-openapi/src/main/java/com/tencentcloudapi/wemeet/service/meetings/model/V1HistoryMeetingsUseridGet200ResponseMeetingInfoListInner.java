/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.meetings.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner {
    @JsonProperty(value = "end_time")
    private Long endTime;

    @JsonProperty(value = "meeting_code")
    private String meetingCode;

    @JsonProperty(value = "meeting_id")
    private String meetingId;

    @JsonProperty(value = "meeting_type")
    private Long meetingType;

    @JsonProperty(value = "start_time")
    private Long startTime;

    @JsonProperty(value = "sub_meeting_id")
    private String subMeetingId;

    @JsonProperty(value = "subject")
    private String subject;

    /**
     */
    public V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner() {
    }

    /**
     * @param endTime 会议结束时间戳，UNIX 时间戳（单位秒）。
     */
    public V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner endTime(Long endTime) {
        this.endTime = endTime;
        return this;
    }
    /**
     * @return endTime 会议结束时间戳，UNIX 时间戳（单位秒）。
     **/
    public Long getEndTime() {
        return endTime;
    }

    /**
     * @param endTime 会议结束时间戳，UNIX 时间戳（单位秒）。
     */
    public void setEndTime(Long endTime) {
        this.endTime = endTime;
    }
    /**
     * @param meetingCode 会议 App 的呼入号码。
     */
    public V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner meetingCode(String meetingCode) {
        this.meetingCode = meetingCode;
        return this;
    }
    /**
     * @return meetingCode 会议 App 的呼入号码。
     **/
    public String getMeetingCode() {
        return meetingCode;
    }

    /**
     * @param meetingCode 会议 App 的呼入号码。
     */
    public void setMeetingCode(String meetingCode) {
        this.meetingCode = meetingCode;
    }
    /**
     * @param meetingId 会议ID
     */
    public V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner meetingId(String meetingId) {
        this.meetingId = meetingId;
        return this;
    }
    /**
     * @return meetingId 会议ID
     **/
    public String getMeetingId() {
        return meetingId;
    }

    /**
     * @param meetingId 会议ID
     */
    public void setMeetingId(String meetingId) {
        this.meetingId = meetingId;
    }
    /**
     * @param meetingType 会议类型 0：一次性会议 1：周期性会议 2：微信专属会议 3：Rooms 投屏会议 5：个人会议号会议 6：网络研讨会
     */
    public V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner meetingType(Long meetingType) {
        this.meetingType = meetingType;
        return this;
    }
    /**
     * @return meetingType 会议类型 0：一次性会议 1：周期性会议 2：微信专属会议 3：Rooms 投屏会议 5：个人会议号会议 6：网络研讨会
     **/
    public Long getMeetingType() {
        return meetingType;
    }

    /**
     * @param meetingType 会议类型 0：一次性会议 1：周期性会议 2：微信专属会议 3：Rooms 投屏会议 5：个人会议号会议 6：网络研讨会
     */
    public void setMeetingType(Long meetingType) {
        this.meetingType = meetingType;
    }
    /**
     * @param startTime 会议开始时间戳，UNIX 时间戳（单位秒）。
     */
    public V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner startTime(Long startTime) {
        this.startTime = startTime;
        return this;
    }
    /**
     * @return startTime 会议开始时间戳，UNIX 时间戳（单位秒）。
     **/
    public Long getStartTime() {
        return startTime;
    }

    /**
     * @param startTime 会议开始时间戳，UNIX 时间戳（单位秒）。
     */
    public void setStartTime(Long startTime) {
        this.startTime = startTime;
    }
    /**
     * @param subMeetingId 
     */
    public V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner subMeetingId(String subMeetingId) {
        this.subMeetingId = subMeetingId;
        return this;
    }
    /**
     * @return subMeetingId 
     **/
    public String getSubMeetingId() {
        return subMeetingId;
    }

    /**
     * @param subMeetingId 
     */
    public void setSubMeetingId(String subMeetingId) {
        this.subMeetingId = subMeetingId;
    }
    /**
     * @param subject 会议主题
     */
    public V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner subject(String subject) {
        this.subject = subject;
        return this;
    }
    /**
     * @return subject 会议主题
     **/
    public String getSubject() {
        return subject;
    }

    /**
     * @param subject 会议主题
     */
    public void setSubject(String subject) {
        this.subject = subject;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner v1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner = (V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner) o;
        return Objects.equals(this.endTime, v1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner.endTime) &&
            Objects.equals(this.meetingCode, v1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner.meetingCode) &&
            Objects.equals(this.meetingId, v1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner.meetingId) &&
            Objects.equals(this.meetingType, v1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner.meetingType) &&
            Objects.equals(this.startTime, v1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner.startTime) &&
            Objects.equals(this.subMeetingId, v1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner.subMeetingId) &&
            Objects.equals(this.subject, v1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner.subject);
    }

    @Override
    public int hashCode() {
        return Objects.hash(endTime, meetingCode, meetingId, meetingType, startTime, subMeetingId, subject);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1HistoryMeetingsUseridGet200ResponseMeetingInfoListInner {\n");
        sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
        sb.append("    meetingCode: ").append(toIndentedString(meetingCode)).append("\n");
        sb.append("    meetingId: ").append(toIndentedString(meetingId)).append("\n");
        sb.append("    meetingType: ").append(toIndentedString(meetingType)).append("\n");
        sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
        sb.append("    subMeetingId: ").append(toIndentedString(subMeetingId)).append("\n");
        sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

