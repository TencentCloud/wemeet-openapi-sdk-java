/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.layout.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner {
    @JsonProperty(value = "enable_polling")
    private Boolean enablePolling;

    @JsonProperty(value = "layout_template_id")
    private String layoutTemplateId;

    @JsonProperty(value = "polling_setting")
    private V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInnerPollingSetting pollingSetting;

    @JsonProperty(value = "user_seat_list")
    private List<V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInnerUserSeatListInner> userSeatList;

    /**
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner() {
    }

    /**
     * @param enablePolling 开启/关闭轮询
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner enablePolling(Boolean enablePolling) {
        this.enablePolling = enablePolling;
        return this;
    }
    /**
     * @return enablePolling 开启/关闭轮询
     **/
    public Boolean getEnablePolling() {
        return enablePolling;
    }

    /**
     * @param enablePolling 开启/关闭轮询
     */
    public void setEnablePolling(Boolean enablePolling) {
        this.enablePolling = enablePolling;
    }
    /**
     * @param layoutTemplateId 布局模板 ID
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner layoutTemplateId(String layoutTemplateId) {
        this.layoutTemplateId = layoutTemplateId;
        return this;
    }
    /**
     * @return layoutTemplateId 布局模板 ID
     **/
    public String getLayoutTemplateId() {
        return layoutTemplateId;
    }

    /**
     * @param layoutTemplateId 布局模板 ID
     */
    public void setLayoutTemplateId(String layoutTemplateId) {
        this.layoutTemplateId = layoutTemplateId;
    }
    /**
     * @param pollingSetting 
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner pollingSetting(V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInnerPollingSetting pollingSetting) {
        this.pollingSetting = pollingSetting;
        return this;
    }
    /**
     * @return pollingSetting 
     **/
    public V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInnerPollingSetting getPollingSetting() {
        return pollingSetting;
    }

    /**
     * @param pollingSetting 
     */
    public void setPollingSetting(V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInnerPollingSetting pollingSetting) {
        this.pollingSetting = pollingSetting;
    }
    /**
     * @param userSeatList 用户座次对象列表
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner userSeatList(List<V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInnerUserSeatListInner> userSeatList) {
        this.userSeatList = userSeatList;
        return this;
    }
    /**
     * @return userSeatList 用户座次对象列表
     **/
    public List<V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInnerUserSeatListInner> getUserSeatList() {
        return userSeatList;
    }

    /**
     * @param userSeatList 用户座次对象列表
     */
    public void setUserSeatList(List<V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInnerUserSeatListInner> userSeatList) {
        this.userSeatList = userSeatList;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner v1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner = (V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner) o;
        return Objects.equals(this.enablePolling, v1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner.enablePolling) &&
            Objects.equals(this.layoutTemplateId, v1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner.layoutTemplateId) &&
            Objects.equals(this.pollingSetting, v1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner.pollingSetting) &&
            Objects.equals(this.userSeatList, v1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner.userSeatList);
    }

    @Override
    public int hashCode() {
        return Objects.hash(enablePolling, layoutTemplateId, pollingSetting, userSeatList);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner {\n");
        sb.append("    enablePolling: ").append(toIndentedString(enablePolling)).append("\n");
        sb.append("    layoutTemplateId: ").append(toIndentedString(layoutTemplateId)).append("\n");
        sb.append("    pollingSetting: ").append(toIndentedString(pollingSetting)).append("\n");
        sb.append("    userSeatList: ").append(toIndentedString(userSeatList)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

