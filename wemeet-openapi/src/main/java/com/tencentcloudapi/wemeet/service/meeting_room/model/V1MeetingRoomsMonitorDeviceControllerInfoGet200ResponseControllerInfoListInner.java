/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.meeting_room.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner {
    @JsonProperty(value = "app_version")
    private String appVersion;

    @JsonProperty(value = "controller_model")
    private String controllerModel;

    @JsonProperty(value = "controller_name")
    private String controllerName;

    @JsonProperty(value = "cpu_type")
    private String cpuType;

    @JsonProperty(value = "cpu_usage")
    private String cpuUsage;

    @JsonProperty(value = "framework_version")
    private String frameworkVersion;

    @JsonProperty(value = "ip_address")
    private String ipAddress;

    @JsonProperty(value = "mac_address")
    private String macAddress;

    @JsonProperty(value = "manufacture_name")
    private String manufactureName;

    @JsonProperty(value = "meeting_room_location")
    private String meetingRoomLocation;

    @JsonProperty(value = "meeting_room_name")
    private String meetingRoomName;

    @JsonProperty(value = "mem_usage")
    private String memUsage;

    @JsonProperty(value = "network_type")
    private String networkType;

    @JsonProperty(value = "rooms_id")
    private String roomsId;

    @JsonProperty(value = "status")
    private String status;

    /**
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner() {
    }

    /**
     * @param appVersion 应用程序版本。
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner appVersion(String appVersion) {
        this.appVersion = appVersion;
        return this;
    }
    /**
     * @return appVersion 应用程序版本。
     **/
    public String getAppVersion() {
        return appVersion;
    }

    /**
     * @param appVersion 应用程序版本。
     */
    public void setAppVersion(String appVersion) {
        this.appVersion = appVersion;
    }
    /**
     * @param controllerModel 控制器型号
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner controllerModel(String controllerModel) {
        this.controllerModel = controllerModel;
        return this;
    }
    /**
     * @return controllerModel 控制器型号
     **/
    public String getControllerModel() {
        return controllerModel;
    }

    /**
     * @param controllerModel 控制器型号
     */
    public void setControllerModel(String controllerModel) {
        this.controllerModel = controllerModel;
    }
    /**
     * @param controllerName 控制器名称
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner controllerName(String controllerName) {
        this.controllerName = controllerName;
        return this;
    }
    /**
     * @return controllerName 控制器名称
     **/
    public String getControllerName() {
        return controllerName;
    }

    /**
     * @param controllerName 控制器名称
     */
    public void setControllerName(String controllerName) {
        this.controllerName = controllerName;
    }
    /**
     * @param cpuType CPU 类型
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner cpuType(String cpuType) {
        this.cpuType = cpuType;
        return this;
    }
    /**
     * @return cpuType CPU 类型
     **/
    public String getCpuType() {
        return cpuType;
    }

    /**
     * @param cpuType CPU 类型
     */
    public void setCpuType(String cpuType) {
        this.cpuType = cpuType;
    }
    /**
     * @param cpuUsage CPU 当前占有率
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner cpuUsage(String cpuUsage) {
        this.cpuUsage = cpuUsage;
        return this;
    }
    /**
     * @return cpuUsage CPU 当前占有率
     **/
    public String getCpuUsage() {
        return cpuUsage;
    }

    /**
     * @param cpuUsage CPU 当前占有率
     */
    public void setCpuUsage(String cpuUsage) {
        this.cpuUsage = cpuUsage;
    }
    /**
     * @param frameworkVersion 固件版本
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner frameworkVersion(String frameworkVersion) {
        this.frameworkVersion = frameworkVersion;
        return this;
    }
    /**
     * @return frameworkVersion 固件版本
     **/
    public String getFrameworkVersion() {
        return frameworkVersion;
    }

    /**
     * @param frameworkVersion 固件版本
     */
    public void setFrameworkVersion(String frameworkVersion) {
        this.frameworkVersion = frameworkVersion;
    }
    /**
     * @param ipAddress IP 地址
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner ipAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }
    /**
     * @return ipAddress IP 地址
     **/
    public String getIpAddress() {
        return ipAddress;
    }

    /**
     * @param ipAddress IP 地址
     */
    public void setIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
    }
    /**
     * @param macAddress MAC 地址
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner macAddress(String macAddress) {
        this.macAddress = macAddress;
        return this;
    }
    /**
     * @return macAddress MAC 地址
     **/
    public String getMacAddress() {
        return macAddress;
    }

    /**
     * @param macAddress MAC 地址
     */
    public void setMacAddress(String macAddress) {
        this.macAddress = macAddress;
    }
    /**
     * @param manufactureName 厂商
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner manufactureName(String manufactureName) {
        this.manufactureName = manufactureName;
        return this;
    }
    /**
     * @return manufactureName 厂商
     **/
    public String getManufactureName() {
        return manufactureName;
    }

    /**
     * @param manufactureName 厂商
     */
    public void setManufactureName(String manufactureName) {
        this.manufactureName = manufactureName;
    }
    /**
     * @param meetingRoomLocation 会议室地址。
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner meetingRoomLocation(String meetingRoomLocation) {
        this.meetingRoomLocation = meetingRoomLocation;
        return this;
    }
    /**
     * @return meetingRoomLocation 会议室地址。
     **/
    public String getMeetingRoomLocation() {
        return meetingRoomLocation;
    }

    /**
     * @param meetingRoomLocation 会议室地址。
     */
    public void setMeetingRoomLocation(String meetingRoomLocation) {
        this.meetingRoomLocation = meetingRoomLocation;
    }
    /**
     * @param meetingRoomName 会议室名称。
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner meetingRoomName(String meetingRoomName) {
        this.meetingRoomName = meetingRoomName;
        return this;
    }
    /**
     * @return meetingRoomName 会议室名称。
     **/
    public String getMeetingRoomName() {
        return meetingRoomName;
    }

    /**
     * @param meetingRoomName 会议室名称。
     */
    public void setMeetingRoomName(String meetingRoomName) {
        this.meetingRoomName = meetingRoomName;
    }
    /**
     * @param memUsage 内存使用大小
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner memUsage(String memUsage) {
        this.memUsage = memUsage;
        return this;
    }
    /**
     * @return memUsage 内存使用大小
     **/
    public String getMemUsage() {
        return memUsage;
    }

    /**
     * @param memUsage 内存使用大小
     */
    public void setMemUsage(String memUsage) {
        this.memUsage = memUsage;
    }
    /**
     * @param networkType 网络类型
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner networkType(String networkType) {
        this.networkType = networkType;
        return this;
    }
    /**
     * @return networkType 网络类型
     **/
    public String getNetworkType() {
        return networkType;
    }

    /**
     * @param networkType 网络类型
     */
    public void setNetworkType(String networkType) {
        this.networkType = networkType;
    }
    /**
     * @param roomsId 会议室 ID。
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner roomsId(String roomsId) {
        this.roomsId = roomsId;
        return this;
    }
    /**
     * @return roomsId 会议室 ID。
     **/
    public String getRoomsId() {
        return roomsId;
    }

    /**
     * @param roomsId 会议室 ID。
     */
    public void setRoomsId(String roomsId) {
        this.roomsId = roomsId;
    }
    /**
     * @param status 设备状态；0:离线 1:在线
     */
    public V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner status(String status) {
        this.status = status;
        return this;
    }
    /**
     * @return status 设备状态；0:离线 1:在线
     **/
    public String getStatus() {
        return status;
    }

    /**
     * @param status 设备状态；0:离线 1:在线
     */
    public void setStatus(String status) {
        this.status = status;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner = (V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner) o;
        return Objects.equals(this.appVersion, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.appVersion) &&
            Objects.equals(this.controllerModel, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.controllerModel) &&
            Objects.equals(this.controllerName, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.controllerName) &&
            Objects.equals(this.cpuType, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.cpuType) &&
            Objects.equals(this.cpuUsage, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.cpuUsage) &&
            Objects.equals(this.frameworkVersion, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.frameworkVersion) &&
            Objects.equals(this.ipAddress, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.ipAddress) &&
            Objects.equals(this.macAddress, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.macAddress) &&
            Objects.equals(this.manufactureName, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.manufactureName) &&
            Objects.equals(this.meetingRoomLocation, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.meetingRoomLocation) &&
            Objects.equals(this.meetingRoomName, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.meetingRoomName) &&
            Objects.equals(this.memUsage, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.memUsage) &&
            Objects.equals(this.networkType, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.networkType) &&
            Objects.equals(this.roomsId, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.roomsId) &&
            Objects.equals(this.status, v1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner.status);
    }

    @Override
    public int hashCode() {
        return Objects.hash(appVersion, controllerModel, controllerName, cpuType, cpuUsage, frameworkVersion, ipAddress, macAddress, manufactureName, meetingRoomLocation, meetingRoomName, memUsage, networkType, roomsId, status);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingRoomsMonitorDeviceControllerInfoGet200ResponseControllerInfoListInner {\n");
        sb.append("    appVersion: ").append(toIndentedString(appVersion)).append("\n");
        sb.append("    controllerModel: ").append(toIndentedString(controllerModel)).append("\n");
        sb.append("    controllerName: ").append(toIndentedString(controllerName)).append("\n");
        sb.append("    cpuType: ").append(toIndentedString(cpuType)).append("\n");
        sb.append("    cpuUsage: ").append(toIndentedString(cpuUsage)).append("\n");
        sb.append("    frameworkVersion: ").append(toIndentedString(frameworkVersion)).append("\n");
        sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
        sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
        sb.append("    manufactureName: ").append(toIndentedString(manufactureName)).append("\n");
        sb.append("    meetingRoomLocation: ").append(toIndentedString(meetingRoomLocation)).append("\n");
        sb.append("    meetingRoomName: ").append(toIndentedString(meetingRoomName)).append("\n");
        sb.append("    memUsage: ").append(toIndentedString(memUsage)).append("\n");
        sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
        sb.append("    roomsId: ").append(toIndentedString(roomsId)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

