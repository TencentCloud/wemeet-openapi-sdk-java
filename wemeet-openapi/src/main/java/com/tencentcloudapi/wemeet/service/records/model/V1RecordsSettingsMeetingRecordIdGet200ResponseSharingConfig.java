/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.records.model;

import java.util.*;

import com.fasterxml.jackson.annotation.*;

/**
 * 共享配置对象
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig {
    @JsonProperty(value = "allow_download")
    private Boolean allowDownload;

    @JsonProperty(value = "allow_view_transcripts")
    private Boolean allowViewTranscripts;

    @JsonProperty(value = "enable_approve")
    private Boolean enableApprove;

    @JsonProperty(value = "enable_password")
    private Boolean enablePassword;

    @JsonProperty(value = "enable_sharing")
    private Boolean enableSharing;

    @JsonProperty(value = "enable_sharing_expire")
    private Boolean enableSharingExpire;

    @JsonProperty(value = "password")
    private String password;

    @JsonProperty(value = "share_scope")
    private Long shareScope;

    @JsonProperty(value = "sharing_expire")
    private Long sharingExpire;

    /**
     */
    public V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig() {
    }

    /**
     * @param allowDownload 是否允许下载
     */
    public V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig allowDownload(Boolean allowDownload) {
        this.allowDownload = allowDownload;
        return this;
    }
    /**
     * @return allowDownload 是否允许下载
     **/
    public Boolean getAllowDownload() {
        return allowDownload;
    }

    /**
     * @param allowDownload 是否允许下载
     */
    public void setAllowDownload(Boolean allowDownload) {
        this.allowDownload = allowDownload;
    }
    /**
     * @param allowViewTranscripts 是否允许查看录制转写
     */
    public V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig allowViewTranscripts(Boolean allowViewTranscripts) {
        this.allowViewTranscripts = allowViewTranscripts;
        return this;
    }
    /**
     * @return allowViewTranscripts 是否允许查看录制转写
     **/
    public Boolean getAllowViewTranscripts() {
        return allowViewTranscripts;
    }

    /**
     * @param allowViewTranscripts 是否允许查看录制转写
     */
    public void setAllowViewTranscripts(Boolean allowViewTranscripts) {
        this.allowViewTranscripts = allowViewTranscripts;
    }
    /**
     * @param enableApprove 是否需要审批
     */
    public V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig enableApprove(Boolean enableApprove) {
        this.enableApprove = enableApprove;
        return this;
    }
    /**
     * @return enableApprove 是否需要审批
     **/
    public Boolean getEnableApprove() {
        return enableApprove;
    }

    /**
     * @param enableApprove 是否需要审批
     */
    public void setEnableApprove(Boolean enableApprove) {
        this.enableApprove = enableApprove;
    }
    /**
     * @param enablePassword 是否开启秘密
     */
    public V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig enablePassword(Boolean enablePassword) {
        this.enablePassword = enablePassword;
        return this;
    }
    /**
     * @return enablePassword 是否开启秘密
     **/
    public Boolean getEnablePassword() {
        return enablePassword;
    }

    /**
     * @param enablePassword 是否开启秘密
     */
    public void setEnablePassword(Boolean enablePassword) {
        this.enablePassword = enablePassword;
    }
    /**
     * @param enableSharing 共享链接开关，true-开启，false-未开启
     */
    public V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig enableSharing(Boolean enableSharing) {
        this.enableSharing = enableSharing;
        return this;
    }
    /**
     * @return enableSharing 共享链接开关，true-开启，false-未开启
     **/
    public Boolean getEnableSharing() {
        return enableSharing;
    }

    /**
     * @param enableSharing 共享链接开关，true-开启，false-未开启
     */
    public void setEnableSharing(Boolean enableSharing) {
        this.enableSharing = enableSharing;
    }
    /**
     * @param enableSharingExpire 是否开启共享链接有效期
     */
    public V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig enableSharingExpire(Boolean enableSharingExpire) {
        this.enableSharingExpire = enableSharingExpire;
        return this;
    }
    /**
     * @return enableSharingExpire 是否开启共享链接有效期
     **/
    public Boolean getEnableSharingExpire() {
        return enableSharingExpire;
    }

    /**
     * @param enableSharingExpire 是否开启共享链接有效期
     */
    public void setEnableSharingExpire(Boolean enableSharingExpire) {
        this.enableSharingExpire = enableSharingExpire;
    }
    /**
     * @param password 录制上传者、会议创建者、企业超级管理员或有企业录制管理权限的用户返回，
     */
    public V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig password(String password) {
        this.password = password;
        return this;
    }
    /**
     * @return password 录制上传者、会议创建者、企业超级管理员或有企业录制管理权限的用户返回，
     **/
    public String getPassword() {
        return password;
    }

    /**
     * @param password 录制上传者、会议创建者、企业超级管理员或有企业录制管理权限的用户返回，
     */
    public void setPassword(String password) {
        this.password = password;
    }
    /**
     * @param shareScope 访问范围，0-所有人，1-同企业
     */
    public V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig shareScope(Long shareScope) {
        this.shareScope = shareScope;
        return this;
    }
    /**
     * @return shareScope 访问范围，0-所有人，1-同企业
     **/
    public Long getShareScope() {
        return shareScope;
    }

    /**
     * @param shareScope 访问范围，0-所有人，1-同企业
     */
    public void setShareScope(Long shareScope) {
        this.shareScope = shareScope;
    }
    /**
     * @param sharingExpire 共享链接有效期，毫秒级时间戳
     */
    public V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig sharingExpire(Long sharingExpire) {
        this.sharingExpire = sharingExpire;
        return this;
    }
    /**
     * @return sharingExpire 共享链接有效期，毫秒级时间戳
     **/
    public Long getSharingExpire() {
        return sharingExpire;
    }

    /**
     * @param sharingExpire 共享链接有效期，毫秒级时间戳
     */
    public void setSharingExpire(Long sharingExpire) {
        this.sharingExpire = sharingExpire;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig v1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig = (V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig) o;
        return Objects.equals(this.allowDownload, v1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig.allowDownload) &&
            Objects.equals(this.allowViewTranscripts, v1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig.allowViewTranscripts) &&
            Objects.equals(this.enableApprove, v1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig.enableApprove) &&
            Objects.equals(this.enablePassword, v1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig.enablePassword) &&
            Objects.equals(this.enableSharing, v1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig.enableSharing) &&
            Objects.equals(this.enableSharingExpire, v1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig.enableSharingExpire) &&
            Objects.equals(this.password, v1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig.password) &&
            Objects.equals(this.shareScope, v1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig.shareScope) &&
            Objects.equals(this.sharingExpire, v1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig.sharingExpire);
    }

    @Override
    public int hashCode() {
        return Objects.hash(allowDownload, allowViewTranscripts, enableApprove, enablePassword, enableSharing, enableSharingExpire, password, shareScope, sharingExpire);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1RecordsSettingsMeetingRecordIdGet200ResponseSharingConfig {\n");
        sb.append("    allowDownload: ").append(toIndentedString(allowDownload)).append("\n");
        sb.append("    allowViewTranscripts: ").append(toIndentedString(allowViewTranscripts)).append("\n");
        sb.append("    enableApprove: ").append(toIndentedString(enableApprove)).append("\n");
        sb.append("    enablePassword: ").append(toIndentedString(enablePassword)).append("\n");
        sb.append("    enableSharing: ").append(toIndentedString(enableSharing)).append("\n");
        sb.append("    enableSharingExpire: ").append(toIndentedString(enableSharingExpire)).append("\n");
        sb.append("    password: ").append(toIndentedString(password)).append("\n");
        sb.append("    shareScope: ").append(toIndentedString(shareScope)).append("\n");
        sb.append("    sharingExpire: ").append(toIndentedString(sharingExpire)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

