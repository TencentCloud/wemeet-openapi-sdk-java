/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.layout.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner {
    @JsonProperty(value = "instanceid", required = true)
    private Long instanceid;

    @JsonProperty(value = "ms_open_id", required = true)
    private String msOpenId;

    /**
     * @param instanceid 用户的终端设备类型：  9：voip、sip 设备（H.323/SIP设备） 说明：请与被操作者的设备类型保持一致，否则不生效。 (required)
     * @param msOpenId 被操作者用户当前会议中的临时身份 ID，单场会议唯一。 (required)
     */
    public V1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner(@NotNull Long instanceid, @NotNull String msOpenId) {
        this.instanceid = instanceid;
        this.msOpenId = msOpenId;
    }

    /**
     * @param instanceid 用户的终端设备类型：  9：voip、sip 设备（H.323/SIP设备） 说明：请与被操作者的设备类型保持一致，否则不生效。 (required)
     */
    public V1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner instanceid(@NotNull Long instanceid) {
        this.instanceid = instanceid;
        return this;
    }
    /**
     * @return instanceid 用户的终端设备类型：  9：voip、sip 设备（H.323/SIP设备） 说明：请与被操作者的设备类型保持一致，否则不生效。
     **/
    public Long getInstanceid() {
        return instanceid;
    }

    /**
     * @param instanceid 用户的终端设备类型：  9：voip、sip 设备（H.323/SIP设备） 说明：请与被操作者的设备类型保持一致，否则不生效。 (required)
     */
    public void setInstanceid(Long instanceid) {
        this.instanceid = instanceid;
    }
    /**
     * @param msOpenId 被操作者用户当前会议中的临时身份 ID，单场会议唯一。 (required)
     */
    public V1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner msOpenId(@NotNull String msOpenId) {
        this.msOpenId = msOpenId;
        return this;
    }
    /**
     * @return msOpenId 被操作者用户当前会议中的临时身份 ID，单场会议唯一。
     **/
    public String getMsOpenId() {
        return msOpenId;
    }

    /**
     * @param msOpenId 被操作者用户当前会议中的临时身份 ID，单场会议唯一。 (required)
     */
    public void setMsOpenId(String msOpenId) {
        this.msOpenId = msOpenId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner v1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner = (V1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner) o;
        return Objects.equals(this.instanceid, v1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner.instanceid) &&
            Objects.equals(this.msOpenId, v1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner.msOpenId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(instanceid, msOpenId);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingsMeetingIdApplyingLayoutPutRequestUserListInner {\n");
        sb.append("    instanceid: ").append(toIndentedString(instanceid)).append("\n");
        sb.append("    msOpenId: ").append(toIndentedString(msOpenId)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

