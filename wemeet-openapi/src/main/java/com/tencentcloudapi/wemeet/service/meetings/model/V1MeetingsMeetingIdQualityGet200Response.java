/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.meetings.model;

import java.util.*;

import com.fasterxml.jackson.annotation.*;

/**
 * V1MeetingsMeetingIdQualityGet200Response
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingsMeetingIdQualityGet200Response {
    @JsonProperty(value = "audio_quality")
    private Long audioQuality;

    @JsonProperty(value = "current_page")
    private Long currentPage;

    @JsonProperty(value = "current_size")
    private Long currentSize;

    @JsonProperty(value = "meeting_id")
    private String meetingId;

    @JsonProperty(value = "network_quality")
    private Long networkQuality;

    @JsonProperty(value = "participants")
    private List<V1MeetingsMeetingIdQualityGet200ResponseParticipantsInner> participants;

    @JsonProperty(value = "problems")
    private List<String> problems;

    @JsonProperty(value = "quality")
    private Long quality;

    @JsonProperty(value = "screen_share_quality")
    private Long screenShareQuality;

    @JsonProperty(value = "total_count")
    private Long totalCount;

    @JsonProperty(value = "total_page")
    private Long totalPage;

    @JsonProperty(value = "video_quality")
    private Long videoQuality;

    /**
     */
    public V1MeetingsMeetingIdQualityGet200Response() {
    }

    /**
     * @param audioQuality 音频质量：0-无数据，1-好、2-较好、3-中、4-差
     */
    public V1MeetingsMeetingIdQualityGet200Response audioQuality(Long audioQuality) {
        this.audioQuality = audioQuality;
        return this;
    }
    /**
     * @return audioQuality 音频质量：0-无数据，1-好、2-较好、3-中、4-差
     **/
    public Long getAudioQuality() {
        return audioQuality;
    }

    /**
     * @param audioQuality 音频质量：0-无数据，1-好、2-较好、3-中、4-差
     */
    public void setAudioQuality(Long audioQuality) {
        this.audioQuality = audioQuality;
    }
    /**
     * @param currentPage 分页查询返回当前页码
     */
    public V1MeetingsMeetingIdQualityGet200Response currentPage(Long currentPage) {
        this.currentPage = currentPage;
        return this;
    }
    /**
     * @return currentPage 分页查询返回当前页码
     **/
    public Long getCurrentPage() {
        return currentPage;
    }

    /**
     * @param currentPage 分页查询返回当前页码
     */
    public void setCurrentPage(Long currentPage) {
        this.currentPage = currentPage;
    }
    /**
     * @param currentSize 分页查询返回单页数据条数 
     */
    public V1MeetingsMeetingIdQualityGet200Response currentSize(Long currentSize) {
        this.currentSize = currentSize;
        return this;
    }
    /**
     * @return currentSize 分页查询返回单页数据条数 
     **/
    public Long getCurrentSize() {
        return currentSize;
    }

    /**
     * @param currentSize 分页查询返回单页数据条数 
     */
    public void setCurrentSize(Long currentSize) {
        this.currentSize = currentSize;
    }
    /**
     * @param meetingId 会议的唯一 ID
     */
    public V1MeetingsMeetingIdQualityGet200Response meetingId(String meetingId) {
        this.meetingId = meetingId;
        return this;
    }
    /**
     * @return meetingId 会议的唯一 ID
     **/
    public String getMeetingId() {
        return meetingId;
    }

    /**
     * @param meetingId 会议的唯一 ID
     */
    public void setMeetingId(String meetingId) {
        this.meetingId = meetingId;
    }
    /**
     * @param networkQuality 网络质量：0-无数据，1-好、2-较好、3-中、4-差
     */
    public V1MeetingsMeetingIdQualityGet200Response networkQuality(Long networkQuality) {
        this.networkQuality = networkQuality;
        return this;
    }
    /**
     * @return networkQuality 网络质量：0-无数据，1-好、2-较好、3-中、4-差
     **/
    public Long getNetworkQuality() {
        return networkQuality;
    }

    /**
     * @param networkQuality 网络质量：0-无数据，1-好、2-较好、3-中、4-差
     */
    public void setNetworkQuality(Long networkQuality) {
        this.networkQuality = networkQuality;
    }
    /**
     * @param participants 参会人员健康度对象数组（按成员入会时间正序排列，入会越早的在越上面；成员使用不同端入会时平铺返回数据，instanceid不同）
     */
    public V1MeetingsMeetingIdQualityGet200Response participants(List<V1MeetingsMeetingIdQualityGet200ResponseParticipantsInner> participants) {
        this.participants = participants;
        return this;
    }
    /**
     * @return participants 参会人员健康度对象数组（按成员入会时间正序排列，入会越早的在越上面；成员使用不同端入会时平铺返回数据，instanceid不同）
     **/
    public List<V1MeetingsMeetingIdQualityGet200ResponseParticipantsInner> getParticipants() {
        return participants;
    }

    /**
     * @param participants 参会人员健康度对象数组（按成员入会时间正序排列，入会越早的在越上面；成员使用不同端入会时平铺返回数据，instanceid不同）
     */
    public void setParticipants(List<V1MeetingsMeetingIdQualityGet200ResponseParticipantsInner> participants) {
        this.participants = participants;
    }
    /**
     * @param problems 告警的具体问题
     */
    public V1MeetingsMeetingIdQualityGet200Response problems(List<String> problems) {
        this.problems = problems;
        return this;
    }
    /**
     * @return problems 告警的具体问题
     **/
    public List<String> getProblems() {
        return problems;
    }

    /**
     * @param problems 告警的具体问题
     */
    public void setProblems(List<String> problems) {
        this.problems = problems;
    }
    /**
     * @param quality 健康度：0-无数据，1-健康、2-告警
     */
    public V1MeetingsMeetingIdQualityGet200Response quality(Long quality) {
        this.quality = quality;
        return this;
    }
    /**
     * @return quality 健康度：0-无数据，1-健康、2-告警
     **/
    public Long getQuality() {
        return quality;
    }

    /**
     * @param quality 健康度：0-无数据，1-健康、2-告警
     */
    public void setQuality(Long quality) {
        this.quality = quality;
    }
    /**
     * @param screenShareQuality 共享屏幕质量：0-无数据，1-好、2-较好、3-中、4-差
     */
    public V1MeetingsMeetingIdQualityGet200Response screenShareQuality(Long screenShareQuality) {
        this.screenShareQuality = screenShareQuality;
        return this;
    }
    /**
     * @return screenShareQuality 共享屏幕质量：0-无数据，1-好、2-较好、3-中、4-差
     **/
    public Long getScreenShareQuality() {
        return screenShareQuality;
    }

    /**
     * @param screenShareQuality 共享屏幕质量：0-无数据，1-好、2-较好、3-中、4-差
     */
    public void setScreenShareQuality(Long screenShareQuality) {
        this.screenShareQuality = screenShareQuality;
    }
    /**
     * @param totalCount 分页查询返回数据总数
     */
    public V1MeetingsMeetingIdQualityGet200Response totalCount(Long totalCount) {
        this.totalCount = totalCount;
        return this;
    }
    /**
     * @return totalCount 分页查询返回数据总数
     **/
    public Long getTotalCount() {
        return totalCount;
    }

    /**
     * @param totalCount 分页查询返回数据总数
     */
    public void setTotalCount(Long totalCount) {
        this.totalCount = totalCount;
    }
    /**
     * @param totalPage 分页查询返回分页总数
     */
    public V1MeetingsMeetingIdQualityGet200Response totalPage(Long totalPage) {
        this.totalPage = totalPage;
        return this;
    }
    /**
     * @return totalPage 分页查询返回分页总数
     **/
    public Long getTotalPage() {
        return totalPage;
    }

    /**
     * @param totalPage 分页查询返回分页总数
     */
    public void setTotalPage(Long totalPage) {
        this.totalPage = totalPage;
    }
    /**
     * @param videoQuality 视频质量：0-无数据，1-好、2-较好、3-中、4-差
     */
    public V1MeetingsMeetingIdQualityGet200Response videoQuality(Long videoQuality) {
        this.videoQuality = videoQuality;
        return this;
    }
    /**
     * @return videoQuality 视频质量：0-无数据，1-好、2-较好、3-中、4-差
     **/
    public Long getVideoQuality() {
        return videoQuality;
    }

    /**
     * @param videoQuality 视频质量：0-无数据，1-好、2-较好、3-中、4-差
     */
    public void setVideoQuality(Long videoQuality) {
        this.videoQuality = videoQuality;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingsMeetingIdQualityGet200Response v1MeetingsMeetingIdQualityGet200Response = (V1MeetingsMeetingIdQualityGet200Response) o;
        return Objects.equals(this.audioQuality, v1MeetingsMeetingIdQualityGet200Response.audioQuality) &&
            Objects.equals(this.currentPage, v1MeetingsMeetingIdQualityGet200Response.currentPage) &&
            Objects.equals(this.currentSize, v1MeetingsMeetingIdQualityGet200Response.currentSize) &&
            Objects.equals(this.meetingId, v1MeetingsMeetingIdQualityGet200Response.meetingId) &&
            Objects.equals(this.networkQuality, v1MeetingsMeetingIdQualityGet200Response.networkQuality) &&
            Objects.equals(this.participants, v1MeetingsMeetingIdQualityGet200Response.participants) &&
            Objects.equals(this.problems, v1MeetingsMeetingIdQualityGet200Response.problems) &&
            Objects.equals(this.quality, v1MeetingsMeetingIdQualityGet200Response.quality) &&
            Objects.equals(this.screenShareQuality, v1MeetingsMeetingIdQualityGet200Response.screenShareQuality) &&
            Objects.equals(this.totalCount, v1MeetingsMeetingIdQualityGet200Response.totalCount) &&
            Objects.equals(this.totalPage, v1MeetingsMeetingIdQualityGet200Response.totalPage) &&
            Objects.equals(this.videoQuality, v1MeetingsMeetingIdQualityGet200Response.videoQuality);
    }

    @Override
    public int hashCode() {
        return Objects.hash(audioQuality, currentPage, currentSize, meetingId, networkQuality, participants, problems, quality, screenShareQuality, totalCount, totalPage, videoQuality);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingsMeetingIdQualityGet200Response {\n");
        sb.append("    audioQuality: ").append(toIndentedString(audioQuality)).append("\n");
        sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
        sb.append("    currentSize: ").append(toIndentedString(currentSize)).append("\n");
        sb.append("    meetingId: ").append(toIndentedString(meetingId)).append("\n");
        sb.append("    networkQuality: ").append(toIndentedString(networkQuality)).append("\n");
        sb.append("    participants: ").append(toIndentedString(participants)).append("\n");
        sb.append("    problems: ").append(toIndentedString(problems)).append("\n");
        sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
        sb.append("    screenShareQuality: ").append(toIndentedString(screenShareQuality)).append("\n");
        sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
        sb.append("    totalPage: ").append(toIndentedString(totalPage)).append("\n");
        sb.append("    videoQuality: ").append(toIndentedString(videoQuality)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

