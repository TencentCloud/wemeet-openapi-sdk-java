/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.user_manager.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner {
    @JsonProperty(value = "user_account_count")
    private Long userAccountCount;

    @JsonProperty(value = "user_account_type")
    private Long userAccountType;

    @JsonProperty(value = "user_account_used_count")
    private Long userAccountUsedCount;

    /**
     */
    public V1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner() {
    }

    /**
     * @param userAccountCount 账号数
     */
    public V1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner userAccountCount(Long userAccountCount) {
        this.userAccountCount = userAccountCount;
        return this;
    }
    /**
     * @return userAccountCount 账号数
     **/
    public Long getUserAccountCount() {
        return userAccountCount;
    }

    /**
     * @param userAccountCount 账号数
     */
    public void setUserAccountCount(Long userAccountCount) {
        this.userAccountCount = userAccountCount;
    }
    /**
     * @param userAccountType 账号类型，1：高级账号 （企业版，教育版）  2：免费账号  （企业版，教育版，商业版）  3：免费账号100方 （商业版）  4：高级账号300方（商业版）  5：高级账号500方（商业版）  6：高级账号1000方（商业版）  7：高级账号2000方（商业版）
     */
    public V1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner userAccountType(Long userAccountType) {
        this.userAccountType = userAccountType;
        return this;
    }
    /**
     * @return userAccountType 账号类型，1：高级账号 （企业版，教育版）  2：免费账号  （企业版，教育版，商业版）  3：免费账号100方 （商业版）  4：高级账号300方（商业版）  5：高级账号500方（商业版）  6：高级账号1000方（商业版）  7：高级账号2000方（商业版）
     **/
    public Long getUserAccountType() {
        return userAccountType;
    }

    /**
     * @param userAccountType 账号类型，1：高级账号 （企业版，教育版）  2：免费账号  （企业版，教育版，商业版）  3：免费账号100方 （商业版）  4：高级账号300方（商业版）  5：高级账号500方（商业版）  6：高级账号1000方（商业版）  7：高级账号2000方（商业版）
     */
    public void setUserAccountType(Long userAccountType) {
        this.userAccountType = userAccountType;
    }
    /**
     * @param userAccountUsedCount 已分配账号数
     */
    public V1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner userAccountUsedCount(Long userAccountUsedCount) {
        this.userAccountUsedCount = userAccountUsedCount;
        return this;
    }
    /**
     * @return userAccountUsedCount 已分配账号数
     **/
    public Long getUserAccountUsedCount() {
        return userAccountUsedCount;
    }

    /**
     * @param userAccountUsedCount 已分配账号数
     */
    public void setUserAccountUsedCount(Long userAccountUsedCount) {
        this.userAccountUsedCount = userAccountUsedCount;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner v1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner = (V1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner) o;
        return Objects.equals(this.userAccountCount, v1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner.userAccountCount) &&
            Objects.equals(this.userAccountType, v1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner.userAccountType) &&
            Objects.equals(this.userAccountUsedCount, v1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner.userAccountUsedCount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(userAccountCount, userAccountType, userAccountUsedCount);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1UsersAccountStatisticsGet200ResponseUserAccountDetailsInner {\n");
        sb.append("    userAccountCount: ").append(toIndentedString(userAccountCount)).append("\n");
        sb.append("    userAccountType: ").append(toIndentedString(userAccountType)).append("\n");
        sb.append("    userAccountUsedCount: ").append(toIndentedString(userAccountUsedCount)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

