/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.meeting_guest.model;

import java.util.*;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1GuestsPutRequest
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1GuestsPutRequest {
    @JsonProperty(value = "guests", required = true)
    private List<V1GuestsPutRequestGuestsInner> guests;

    @JsonProperty(value = "instanceid", required = true)
    private Long instanceid;

    @JsonProperty(value = "meeting_code", required = true)
    private String meetingCode;

    @JsonProperty(value = "userid", required = true)
    private String userid;

    /**
     * @param guests 会议嘉宾列表（传空数组会清空嘉宾列表）。 (required)
     * @param instanceid 用户的终端设备类型： 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS (required)
     * @param meetingCode 会议码。 (required)
     * @param userid 用户的 ID（企业内部请使用企业唯一用户标识，OAuth2.0 鉴权用户请使用 openId） (required)
     */
    public V1GuestsPutRequest(@NotNull List<V1GuestsPutRequestGuestsInner> guests, @NotNull Long instanceid, @NotNull String meetingCode, @NotNull String userid) {
        this.guests = guests;
        this.instanceid = instanceid;
        this.meetingCode = meetingCode;
        this.userid = userid;
    }

    /**
     * @param guests 会议嘉宾列表（传空数组会清空嘉宾列表）。 (required)
     */
    public V1GuestsPutRequest guests(@NotNull List<V1GuestsPutRequestGuestsInner> guests) {
        this.guests = guests;
        return this;
    }
    /**
     * @return guests 会议嘉宾列表（传空数组会清空嘉宾列表）。
     **/
    public List<V1GuestsPutRequestGuestsInner> getGuests() {
        return guests;
    }

    /**
     * @param guests 会议嘉宾列表（传空数组会清空嘉宾列表）。 (required)
     */
    public void setGuests(List<V1GuestsPutRequestGuestsInner> guests) {
        this.guests = guests;
    }
    /**
     * @param instanceid 用户的终端设备类型： 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS (required)
     */
    public V1GuestsPutRequest instanceid(@NotNull Long instanceid) {
        this.instanceid = instanceid;
        return this;
    }
    /**
     * @return instanceid 用户的终端设备类型： 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS
     **/
    public Long getInstanceid() {
        return instanceid;
    }

    /**
     * @param instanceid 用户的终端设备类型： 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS (required)
     */
    public void setInstanceid(Long instanceid) {
        this.instanceid = instanceid;
    }
    /**
     * @param meetingCode 会议码。 (required)
     */
    public V1GuestsPutRequest meetingCode(@NotNull String meetingCode) {
        this.meetingCode = meetingCode;
        return this;
    }
    /**
     * @return meetingCode 会议码。
     **/
    public String getMeetingCode() {
        return meetingCode;
    }

    /**
     * @param meetingCode 会议码。 (required)
     */
    public void setMeetingCode(String meetingCode) {
        this.meetingCode = meetingCode;
    }
    /**
     * @param userid 用户的 ID（企业内部请使用企业唯一用户标识，OAuth2.0 鉴权用户请使用 openId） (required)
     */
    public V1GuestsPutRequest userid(@NotNull String userid) {
        this.userid = userid;
        return this;
    }
    /**
     * @return userid 用户的 ID（企业内部请使用企业唯一用户标识，OAuth2.0 鉴权用户请使用 openId）
     **/
    public String getUserid() {
        return userid;
    }

    /**
     * @param userid 用户的 ID（企业内部请使用企业唯一用户标识，OAuth2.0 鉴权用户请使用 openId） (required)
     */
    public void setUserid(String userid) {
        this.userid = userid;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1GuestsPutRequest v1GuestsPutRequest = (V1GuestsPutRequest) o;
        return Objects.equals(this.guests, v1GuestsPutRequest.guests) &&
            Objects.equals(this.instanceid, v1GuestsPutRequest.instanceid) &&
            Objects.equals(this.meetingCode, v1GuestsPutRequest.meetingCode) &&
            Objects.equals(this.userid, v1GuestsPutRequest.userid);
    }

    @Override
    public int hashCode() {
        return Objects.hash(guests, instanceid, meetingCode, userid);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1GuestsPutRequest {\n");
        sb.append("    guests: ").append(toIndentedString(guests)).append("\n");
        sb.append("    instanceid: ").append(toIndentedString(instanceid)).append("\n");
        sb.append("    meetingCode: ").append(toIndentedString(meetingCode)).append("\n");
        sb.append("    userid: ").append(toIndentedString(userid)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

