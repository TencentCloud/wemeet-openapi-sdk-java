/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.user_manager.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1UsersInfoBasicGet200Response
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1UsersInfoBasicGet200Response {
    @JsonProperty(value = "account_type")
    private Long accountType;

    @JsonProperty(value = "account_version")
    private Long accountVersion;

    @JsonProperty(value = "add_on_largemeeting")
    private Long addOnLargemeeting;

    @JsonProperty(value = "add_on_webinar")
    private Long addOnWebinar;

    @JsonProperty(value = "ai_account_type")
    private Long aiAccountType;

    @JsonProperty(value = "avatar_url")
    private String avatarUrl;

    @JsonProperty(value = "email_status")
    private Long emailStatus;

    @JsonProperty(value = "enable_ai_account")
    private Boolean enableAiAccount;

    @JsonProperty(value = "is_voov")
    private Long isVoov;

    @JsonProperty(value = "open_corp_id")
    private String openCorpId;

    @JsonProperty(value = "open_corp_name")
    private String openCorpName;

    @JsonProperty(value = "phone_status")
    private Long phoneStatus;

    @JsonProperty(value = "status")
    private String status;

    @JsonProperty(value = "user_account_type")
    private Long userAccountType;

    @JsonProperty(value = "username")
    private String username;

    /**
     */
    public V1UsersInfoBasicGet200Response() {
    }

    /**
     * @param accountType 
     */
    public V1UsersInfoBasicGet200Response accountType(Long accountType) {
        this.accountType = accountType;
        return this;
    }
    /**
     * @return accountType 
     **/
    public Long getAccountType() {
        return accountType;
    }

    /**
     * @param accountType 
     */
    public void setAccountType(Long accountType) {
        this.accountType = accountType;
    }
    /**
     * @param accountVersion 商企版计费需求，账号版本
     */
    public V1UsersInfoBasicGet200Response accountVersion(Long accountVersion) {
        this.accountVersion = accountVersion;
        return this;
    }
    /**
     * @return accountVersion 商企版计费需求，账号版本
     **/
    public Long getAccountVersion() {
        return accountVersion;
    }

    /**
     * @param accountVersion 商企版计费需求，账号版本
     */
    public void setAccountVersion(Long accountVersion) {
        this.accountVersion = accountVersion;
    }
    /**
     * @param addOnLargemeeting 增强会议体验：房间规模升级许可。 1：500方房间规模升级许可 2：1000方房间规模升级许可 3：2000方房间规模升级许可
     */
    public V1UsersInfoBasicGet200Response addOnLargemeeting(Long addOnLargemeeting) {
        this.addOnLargemeeting = addOnLargemeeting;
        return this;
    }
    /**
     * @return addOnLargemeeting 增强会议体验：房间规模升级许可。 1：500方房间规模升级许可 2：1000方房间规模升级许可 3：2000方房间规模升级许可
     **/
    public Long getAddOnLargemeeting() {
        return addOnLargemeeting;
    }

    /**
     * @param addOnLargemeeting 增强会议体验：房间规模升级许可。 1：500方房间规模升级许可 2：1000方房间规模升级许可 3：2000方房间规模升级许可
     */
    public void setAddOnLargemeeting(Long addOnLargemeeting) {
        this.addOnLargemeeting = addOnLargemeeting;
    }
    /**
     * @param addOnWebinar 增强会议体验：网络研讨会（Webinar）观众规模升级许可。 1：Webinar 观众规模提升至 300 观众 2：Webinar 观众规模提升至 500 观众 3：Webinar 观众规模提升至 1000 观众 4：Webinar 观众规模提升至 2000 观众 5：Webinar 观众规模提升至 3000 观众 6：Webinar 观众规模提升至 5000 观众 7：Webinar 观众规模提升至 8000 观众 8：Webinar 观众规模提升至 10000 观众
     */
    public V1UsersInfoBasicGet200Response addOnWebinar(Long addOnWebinar) {
        this.addOnWebinar = addOnWebinar;
        return this;
    }
    /**
     * @return addOnWebinar 增强会议体验：网络研讨会（Webinar）观众规模升级许可。 1：Webinar 观众规模提升至 300 观众 2：Webinar 观众规模提升至 500 观众 3：Webinar 观众规模提升至 1000 观众 4：Webinar 观众规模提升至 2000 观众 5：Webinar 观众规模提升至 3000 观众 6：Webinar 观众规模提升至 5000 观众 7：Webinar 观众规模提升至 8000 观众 8：Webinar 观众规模提升至 10000 观众
     **/
    public Long getAddOnWebinar() {
        return addOnWebinar;
    }

    /**
     * @param addOnWebinar 增强会议体验：网络研讨会（Webinar）观众规模升级许可。 1：Webinar 观众规模提升至 300 观众 2：Webinar 观众规模提升至 500 观众 3：Webinar 观众规模提升至 1000 观众 4：Webinar 观众规模提升至 2000 观众 5：Webinar 观众规模提升至 3000 观众 6：Webinar 观众规模提升至 5000 观众 7：Webinar 观众规模提升至 8000 观众 8：Webinar 观众规模提升至 10000 观众
     */
    public void setAddOnWebinar(Long addOnWebinar) {
        this.addOnWebinar = addOnWebinar;
    }
    /**
     * @param aiAccountType AI账号类型 1:购买版 2:赠送版
     */
    public V1UsersInfoBasicGet200Response aiAccountType(Long aiAccountType) {
        this.aiAccountType = aiAccountType;
        return this;
    }
    /**
     * @return aiAccountType AI账号类型 1:购买版 2:赠送版
     **/
    public Long getAiAccountType() {
        return aiAccountType;
    }

    /**
     * @param aiAccountType AI账号类型 1:购买版 2:赠送版
     */
    public void setAiAccountType(Long aiAccountType) {
        this.aiAccountType = aiAccountType;
    }
    /**
     * @param avatarUrl 
     */
    public V1UsersInfoBasicGet200Response avatarUrl(String avatarUrl) {
        this.avatarUrl = avatarUrl;
        return this;
    }
    /**
     * @return avatarUrl 
     **/
    public String getAvatarUrl() {
        return avatarUrl;
    }

    /**
     * @param avatarUrl 
     */
    public void setAvatarUrl(String avatarUrl) {
        this.avatarUrl = avatarUrl;
    }
    /**
     * @param emailStatus 邮箱验证状态。 1：已验证 2：未验证
     */
    public V1UsersInfoBasicGet200Response emailStatus(Long emailStatus) {
        this.emailStatus = emailStatus;
        return this;
    }
    /**
     * @return emailStatus 邮箱验证状态。 1：已验证 2：未验证
     **/
    public Long getEmailStatus() {
        return emailStatus;
    }

    /**
     * @param emailStatus 邮箱验证状态。 1：已验证 2：未验证
     */
    public void setEmailStatus(Long emailStatus) {
        this.emailStatus = emailStatus;
    }
    /**
     * @param enableAiAccount 是否有AI账号能力，true：有， false：无，教育版/企业版存在ai账号，商业版都是ai账号，其余为false
     */
    public V1UsersInfoBasicGet200Response enableAiAccount(Boolean enableAiAccount) {
        this.enableAiAccount = enableAiAccount;
        return this;
    }
    /**
     * @return enableAiAccount 是否有AI账号能力，true：有， false：无，教育版/企业版存在ai账号，商业版都是ai账号，其余为false
     **/
    public Boolean getEnableAiAccount() {
        return enableAiAccount;
    }

    /**
     * @param enableAiAccount 是否有AI账号能力，true：有， false：无，教育版/企业版存在ai账号，商业版都是ai账号，其余为false
     */
    public void setEnableAiAccount(Boolean enableAiAccount) {
        this.enableAiAccount = enableAiAccount;
    }
    /**
     * @param isVoov 是否为 VooV Meeting 客户端（国际账号），默认为0。 0：否 1：是
     */
    public V1UsersInfoBasicGet200Response isVoov(Long isVoov) {
        this.isVoov = isVoov;
        return this;
    }
    /**
     * @return isVoov 是否为 VooV Meeting 客户端（国际账号），默认为0。 0：否 1：是
     **/
    public Long getIsVoov() {
        return isVoov;
    }

    /**
     * @param isVoov 是否为 VooV Meeting 客户端（国际账号），默认为0。 0：否 1：是
     */
    public void setIsVoov(Long isVoov) {
        this.isVoov = isVoov;
    }
    /**
     * @param openCorpId 
     */
    public V1UsersInfoBasicGet200Response openCorpId(String openCorpId) {
        this.openCorpId = openCorpId;
        return this;
    }
    /**
     * @return openCorpId 
     **/
    public String getOpenCorpId() {
        return openCorpId;
    }

    /**
     * @param openCorpId 
     */
    public void setOpenCorpId(String openCorpId) {
        this.openCorpId = openCorpId;
    }
    /**
     * @param openCorpName 
     */
    public V1UsersInfoBasicGet200Response openCorpName(String openCorpName) {
        this.openCorpName = openCorpName;
        return this;
    }
    /**
     * @return openCorpName 
     **/
    public String getOpenCorpName() {
        return openCorpName;
    }

    /**
     * @param openCorpName 
     */
    public void setOpenCorpName(String openCorpName) {
        this.openCorpName = openCorpName;
    }
    /**
     * @param phoneStatus 手机号验证状态。 0：未知 1：已验证 2：未验证
     */
    public V1UsersInfoBasicGet200Response phoneStatus(Long phoneStatus) {
        this.phoneStatus = phoneStatus;
        return this;
    }
    /**
     * @return phoneStatus 手机号验证状态。 0：未知 1：已验证 2：未验证
     **/
    public Long getPhoneStatus() {
        return phoneStatus;
    }

    /**
     * @param phoneStatus 手机号验证状态。 0：未知 1：已验证 2：未验证
     */
    public void setPhoneStatus(Long phoneStatus) {
        this.phoneStatus = phoneStatus;
    }
    /**
     * @param status 
     */
    public V1UsersInfoBasicGet200Response status(String status) {
        this.status = status;
        return this;
    }
    /**
     * @return status 
     **/
    public String getStatus() {
        return status;
    }

    /**
     * @param status 
     */
    public void setStatus(String status) {
        this.status = status;
    }
    /**
     * @param userAccountType 账号类型 1：高级账号  2：免费账号  3：免费账号100方 4:高级账号300方，5:高级账号500方，6：高级账号1000方，7:高级账号2000方 8：高级账号100方（商业版） 9：高级账号（企业版/教育版/商业版）
     */
    public V1UsersInfoBasicGet200Response userAccountType(Long userAccountType) {
        this.userAccountType = userAccountType;
        return this;
    }
    /**
     * @return userAccountType 账号类型 1：高级账号  2：免费账号  3：免费账号100方 4:高级账号300方，5:高级账号500方，6：高级账号1000方，7:高级账号2000方 8：高级账号100方（商业版） 9：高级账号（企业版/教育版/商业版）
     **/
    public Long getUserAccountType() {
        return userAccountType;
    }

    /**
     * @param userAccountType 账号类型 1：高级账号  2：免费账号  3：免费账号100方 4:高级账号300方，5:高级账号500方，6：高级账号1000方，7:高级账号2000方 8：高级账号100方（商业版） 9：高级账号（企业版/教育版/商业版）
     */
    public void setUserAccountType(Long userAccountType) {
        this.userAccountType = userAccountType;
    }
    /**
     * @param username 
     */
    public V1UsersInfoBasicGet200Response username(String username) {
        this.username = username;
        return this;
    }
    /**
     * @return username 
     **/
    public String getUsername() {
        return username;
    }

    /**
     * @param username 
     */
    public void setUsername(String username) {
        this.username = username;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1UsersInfoBasicGet200Response v1UsersInfoBasicGet200Response = (V1UsersInfoBasicGet200Response) o;
        return Objects.equals(this.accountType, v1UsersInfoBasicGet200Response.accountType) &&
            Objects.equals(this.accountVersion, v1UsersInfoBasicGet200Response.accountVersion) &&
            Objects.equals(this.addOnLargemeeting, v1UsersInfoBasicGet200Response.addOnLargemeeting) &&
            Objects.equals(this.addOnWebinar, v1UsersInfoBasicGet200Response.addOnWebinar) &&
            Objects.equals(this.aiAccountType, v1UsersInfoBasicGet200Response.aiAccountType) &&
            Objects.equals(this.avatarUrl, v1UsersInfoBasicGet200Response.avatarUrl) &&
            Objects.equals(this.emailStatus, v1UsersInfoBasicGet200Response.emailStatus) &&
            Objects.equals(this.enableAiAccount, v1UsersInfoBasicGet200Response.enableAiAccount) &&
            Objects.equals(this.isVoov, v1UsersInfoBasicGet200Response.isVoov) &&
            Objects.equals(this.openCorpId, v1UsersInfoBasicGet200Response.openCorpId) &&
            Objects.equals(this.openCorpName, v1UsersInfoBasicGet200Response.openCorpName) &&
            Objects.equals(this.phoneStatus, v1UsersInfoBasicGet200Response.phoneStatus) &&
            Objects.equals(this.status, v1UsersInfoBasicGet200Response.status) &&
            Objects.equals(this.userAccountType, v1UsersInfoBasicGet200Response.userAccountType) &&
            Objects.equals(this.username, v1UsersInfoBasicGet200Response.username);
    }

    @Override
    public int hashCode() {
        return Objects.hash(accountType, accountVersion, addOnLargemeeting, addOnWebinar, aiAccountType, avatarUrl, emailStatus, enableAiAccount, isVoov, openCorpId, openCorpName, phoneStatus, status, userAccountType, username);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1UsersInfoBasicGet200Response {\n");
        sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
        sb.append("    accountVersion: ").append(toIndentedString(accountVersion)).append("\n");
        sb.append("    addOnLargemeeting: ").append(toIndentedString(addOnLargemeeting)).append("\n");
        sb.append("    addOnWebinar: ").append(toIndentedString(addOnWebinar)).append("\n");
        sb.append("    aiAccountType: ").append(toIndentedString(aiAccountType)).append("\n");
        sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
        sb.append("    emailStatus: ").append(toIndentedString(emailStatus)).append("\n");
        sb.append("    enableAiAccount: ").append(toIndentedString(enableAiAccount)).append("\n");
        sb.append("    isVoov: ").append(toIndentedString(isVoov)).append("\n");
        sb.append("    openCorpId: ").append(toIndentedString(openCorpId)).append("\n");
        sb.append("    openCorpName: ").append(toIndentedString(openCorpName)).append("\n");
        sb.append("    phoneStatus: ").append(toIndentedString(phoneStatus)).append("\n");
        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    userAccountType: ").append(toIndentedString(userAccountType)).append("\n");
        sb.append("    username: ").append(toIndentedString(username)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

