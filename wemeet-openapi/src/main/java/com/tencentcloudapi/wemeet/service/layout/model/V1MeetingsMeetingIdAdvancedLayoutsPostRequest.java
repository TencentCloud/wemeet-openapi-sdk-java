/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.layout.model;

import java.util.*;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1MeetingsMeetingIdAdvancedLayoutsPostRequest
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingsMeetingIdAdvancedLayoutsPostRequest {
    @JsonProperty(value = "instanceid", required = true)
    private Long instanceid;

    @JsonProperty(value = "layout_list", required = true)
    private List<V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInner> layoutList;

    @JsonProperty(value = "operator_id", required = true)
    private String operatorId;

    @JsonProperty(value = "operator_id_type", required = true)
    private Long operatorIdType;

    /**
     * @param instanceid 设备类型 ID 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS (required)
     * @param layoutList 布局对象列表 (required)
     * @param operatorId 操作人ID (required)
     * @param operatorIdType 操作人id类型，1：userid，4 :ms_open_id (required)
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPostRequest(@NotNull Long instanceid, @NotNull List<V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInner> layoutList, @NotNull String operatorId, @NotNull Long operatorIdType) {
        this.instanceid = instanceid;
        this.layoutList = layoutList;
        this.operatorId = operatorId;
        this.operatorIdType = operatorIdType;
    }

    /**
     * @param instanceid 设备类型 ID 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS (required)
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPostRequest instanceid(@NotNull Long instanceid) {
        this.instanceid = instanceid;
        return this;
    }
    /**
     * @return instanceid 设备类型 ID 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS
     **/
    public Long getInstanceid() {
        return instanceid;
    }

    /**
     * @param instanceid 设备类型 ID 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS (required)
     */
    public void setInstanceid(Long instanceid) {
        this.instanceid = instanceid;
    }
    /**
     * @param layoutList 布局对象列表 (required)
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPostRequest layoutList(@NotNull List<V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInner> layoutList) {
        this.layoutList = layoutList;
        return this;
    }
    /**
     * @return layoutList 布局对象列表
     **/
    public List<V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInner> getLayoutList() {
        return layoutList;
    }

    /**
     * @param layoutList 布局对象列表 (required)
     */
    public void setLayoutList(List<V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInner> layoutList) {
        this.layoutList = layoutList;
    }
    /**
     * @param operatorId 操作人ID (required)
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPostRequest operatorId(@NotNull String operatorId) {
        this.operatorId = operatorId;
        return this;
    }
    /**
     * @return operatorId 操作人ID
     **/
    public String getOperatorId() {
        return operatorId;
    }

    /**
     * @param operatorId 操作人ID (required)
     */
    public void setOperatorId(String operatorId) {
        this.operatorId = operatorId;
    }
    /**
     * @param operatorIdType 操作人id类型，1：userid，4 :ms_open_id (required)
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPostRequest operatorIdType(@NotNull Long operatorIdType) {
        this.operatorIdType = operatorIdType;
        return this;
    }
    /**
     * @return operatorIdType 操作人id类型，1：userid，4 :ms_open_id
     **/
    public Long getOperatorIdType() {
        return operatorIdType;
    }

    /**
     * @param operatorIdType 操作人id类型，1：userid，4 :ms_open_id (required)
     */
    public void setOperatorIdType(Long operatorIdType) {
        this.operatorIdType = operatorIdType;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingsMeetingIdAdvancedLayoutsPostRequest v1MeetingsMeetingIdAdvancedLayoutsPostRequest = (V1MeetingsMeetingIdAdvancedLayoutsPostRequest) o;
        return Objects.equals(this.instanceid, v1MeetingsMeetingIdAdvancedLayoutsPostRequest.instanceid) &&
            Objects.equals(this.layoutList, v1MeetingsMeetingIdAdvancedLayoutsPostRequest.layoutList) &&
            Objects.equals(this.operatorId, v1MeetingsMeetingIdAdvancedLayoutsPostRequest.operatorId) &&
            Objects.equals(this.operatorIdType, v1MeetingsMeetingIdAdvancedLayoutsPostRequest.operatorIdType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(instanceid, layoutList, operatorId, operatorIdType);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingsMeetingIdAdvancedLayoutsPostRequest {\n");
        sb.append("    instanceid: ").append(toIndentedString(instanceid)).append("\n");
        sb.append("    layoutList: ").append(toIndentedString(layoutList)).append("\n");
        sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
        sb.append("    operatorIdType: ").append(toIndentedString(operatorIdType)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

