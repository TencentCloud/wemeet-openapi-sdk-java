/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.layout.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner {
    @JsonProperty(value = "grid_id", required = true)
    private String gridId;

    @JsonProperty(value = "grid_type", required = true)
    private Long gridType;

    @JsonProperty(value = "user_list")
    private List<V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInnerUserListInner> userList;

    @JsonProperty(value = "video_type")
    private Long videoType;

    /**
     * @param gridId 宫格 ID (required)
     * @param gridType 宫格类型： 1-视频画面 2-共享画面 (required)
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner(@NotNull String gridId, @NotNull Long gridType) {
        this.gridId = gridId;
        this.gridType = gridType;
    }

    /**
     * @param gridId 宫格 ID (required)
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner gridId(@NotNull String gridId) {
        this.gridId = gridId;
        return this;
    }
    /**
     * @return gridId 宫格 ID
     **/
    public String getGridId() {
        return gridId;
    }

    /**
     * @param gridId 宫格 ID (required)
     */
    public void setGridId(String gridId) {
        this.gridId = gridId;
    }
    /**
     * @param gridType 宫格类型： 1-视频画面 2-共享画面 (required)
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner gridType(@NotNull Long gridType) {
        this.gridType = gridType;
        return this;
    }
    /**
     * @return gridType 宫格类型： 1-视频画面 2-共享画面
     **/
    public Long getGridType() {
        return gridType;
    }

    /**
     * @param gridType 宫格类型： 1-视频画面 2-共享画面 (required)
     */
    public void setGridType(Long gridType) {
        this.gridType = gridType;
    }
    /**
     * @param userList 宫格中的用户列表 ● 轮询关闭， 只有一个用户 ● 轮询开启后， 可以包含多个用户
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner userList(List<V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInnerUserListInner> userList) {
        this.userList = userList;
        return this;
    }
    /**
     * @return userList 宫格中的用户列表 ● 轮询关闭， 只有一个用户 ● 轮询开启后， 可以包含多个用户
     **/
    public List<V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInnerUserListInner> getUserList() {
        return userList;
    }

    /**
     * @param userList 宫格中的用户列表 ● 轮询关闭， 只有一个用户 ● 轮询开启后， 可以包含多个用户
     */
    public void setUserList(List<V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInnerUserListInner> userList) {
        this.userList = userList;
    }
    /**
     * @param videoType 视频画面来源 1-演讲者 2-自动填充 3-指定人员，根据user_list的定义显示视频内容（此类型需传递 userid 或 ms_open_id、username 入参，作为视频画面展示；若会中参会成员有外部企业用户，需传递该用户的 ms_open_id；如果 userid、ms_open_id 同时传递则以 ms_open_id 为准）
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner videoType(Long videoType) {
        this.videoType = videoType;
        return this;
    }
    /**
     * @return videoType 视频画面来源 1-演讲者 2-自动填充 3-指定人员，根据user_list的定义显示视频内容（此类型需传递 userid 或 ms_open_id、username 入参，作为视频画面展示；若会中参会成员有外部企业用户，需传递该用户的 ms_open_id；如果 userid、ms_open_id 同时传递则以 ms_open_id 为准）
     **/
    public Long getVideoType() {
        return videoType;
    }

    /**
     * @param videoType 视频画面来源 1-演讲者 2-自动填充 3-指定人员，根据user_list的定义显示视频内容（此类型需传递 userid 或 ms_open_id、username 入参，作为视频画面展示；若会中参会成员有外部企业用户，需传递该用户的 ms_open_id；如果 userid、ms_open_id 同时传递则以 ms_open_id 为准）
     */
    public void setVideoType(Long videoType) {
        this.videoType = videoType;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner v1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner = (V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner) o;
        return Objects.equals(this.gridId, v1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner.gridId) &&
            Objects.equals(this.gridType, v1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner.gridType) &&
            Objects.equals(this.userList, v1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner.userList) &&
            Objects.equals(this.videoType, v1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner.videoType);
    }

    @Override
    public int hashCode() {
        return Objects.hash(gridId, gridType, userList, videoType);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingsMeetingIdAdvancedLayoutsPostRequestLayoutListInnerPageListInnerUserSeatListInner {\n");
        sb.append("    gridId: ").append(toIndentedString(gridId)).append("\n");
        sb.append("    gridType: ").append(toIndentedString(gridType)).append("\n");
        sb.append("    userList: ").append(toIndentedString(userList)).append("\n");
        sb.append("    videoType: ").append(toIndentedString(videoType)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

