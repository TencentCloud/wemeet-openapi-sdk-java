/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.user_manager.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1UsersOpenIdToUseridPostRequest
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1UsersOpenIdToUseridPostRequest {
    @JsonProperty(value = "operator_id", required = true)
    private String operatorId;

    @JsonProperty(value = "operator_id_type", required = true)
    private Long operatorIdType;

    @JsonProperty(value = "sdkid", required = true)
    private String sdkid;

    /**
     * @param operatorId 操作者ID (required)
     * @param operatorIdType 操作者ID类型 (required)
     * @param sdkid 第三方应用的sdkid。需要转换的open_id应为腾讯会议为该三方应用提供的open_id。 (required)
     */
    public V1UsersOpenIdToUseridPostRequest(@NotNull String operatorId, @NotNull Long operatorIdType, @NotNull String sdkid) {
        this.operatorId = operatorId;
        this.operatorIdType = operatorIdType;
        this.sdkid = sdkid;
    }

    /**
     * @param operatorId 操作者ID (required)
     */
    public V1UsersOpenIdToUseridPostRequest operatorId(@NotNull String operatorId) {
        this.operatorId = operatorId;
        return this;
    }
    /**
     * @return operatorId 操作者ID
     **/
    public String getOperatorId() {
        return operatorId;
    }

    /**
     * @param operatorId 操作者ID (required)
     */
    public void setOperatorId(String operatorId) {
        this.operatorId = operatorId;
    }
    /**
     * @param operatorIdType 操作者ID类型 (required)
     */
    public V1UsersOpenIdToUseridPostRequest operatorIdType(@NotNull Long operatorIdType) {
        this.operatorIdType = operatorIdType;
        return this;
    }
    /**
     * @return operatorIdType 操作者ID类型
     **/
    public Long getOperatorIdType() {
        return operatorIdType;
    }

    /**
     * @param operatorIdType 操作者ID类型 (required)
     */
    public void setOperatorIdType(Long operatorIdType) {
        this.operatorIdType = operatorIdType;
    }
    /**
     * @param sdkid 第三方应用的sdkid。需要转换的open_id应为腾讯会议为该三方应用提供的open_id。 (required)
     */
    public V1UsersOpenIdToUseridPostRequest sdkid(@NotNull String sdkid) {
        this.sdkid = sdkid;
        return this;
    }
    /**
     * @return sdkid 第三方应用的sdkid。需要转换的open_id应为腾讯会议为该三方应用提供的open_id。
     **/
    public String getSdkid() {
        return sdkid;
    }

    /**
     * @param sdkid 第三方应用的sdkid。需要转换的open_id应为腾讯会议为该三方应用提供的open_id。 (required)
     */
    public void setSdkid(String sdkid) {
        this.sdkid = sdkid;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1UsersOpenIdToUseridPostRequest v1UsersOpenIdToUseridPostRequest = (V1UsersOpenIdToUseridPostRequest) o;
        return Objects.equals(this.operatorId, v1UsersOpenIdToUseridPostRequest.operatorId) &&
            Objects.equals(this.operatorIdType, v1UsersOpenIdToUseridPostRequest.operatorIdType) &&
            Objects.equals(this.sdkid, v1UsersOpenIdToUseridPostRequest.sdkid);
    }

    @Override
    public int hashCode() {
        return Objects.hash(operatorId, operatorIdType, sdkid);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1UsersOpenIdToUseridPostRequest {\n");
        sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
        sb.append("    operatorIdType: ").append(toIndentedString(operatorIdType)).append("\n");
        sb.append("    sdkid: ").append(toIndentedString(sdkid)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

