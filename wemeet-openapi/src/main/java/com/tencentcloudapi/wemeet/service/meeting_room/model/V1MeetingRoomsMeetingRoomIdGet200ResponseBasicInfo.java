/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.meeting_room.model;

import java.util.*;

import com.fasterxml.jackson.annotation.*;

/**
 * 会议室基本信息
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo {
    @JsonProperty(value = "building")
    private String building;

    @JsonProperty(value = "city")
    private String city;

    @JsonProperty(value = "desc")
    private String desc;

    @JsonProperty(value = "device")
    private String device;

    @JsonProperty(value = "floor")
    private String floor;

    @JsonProperty(value = "meeting_room_name")
    private String meetingRoomName;

    @JsonProperty(value = "participant_number")
    private Long participantNumber;

    @JsonProperty(value = "password")
    private String password;

    /**
     */
    public V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo() {
    }

    /**
     * @param building 建筑
     */
    public V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo building(String building) {
        this.building = building;
        return this;
    }
    /**
     * @return building 建筑
     **/
    public String getBuilding() {
        return building;
    }

    /**
     * @param building 建筑
     */
    public void setBuilding(String building) {
        this.building = building;
    }
    /**
     * @param city 城市
     */
    public V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo city(String city) {
        this.city = city;
        return this;
    }
    /**
     * @return city 城市
     **/
    public String getCity() {
        return city;
    }

    /**
     * @param city 城市
     */
    public void setCity(String city) {
        this.city = city;
    }
    /**
     * @param desc 描述（base64）
     */
    public V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo desc(String desc) {
        this.desc = desc;
        return this;
    }
    /**
     * @return desc 描述（base64）
     **/
    public String getDesc() {
        return desc;
    }

    /**
     * @param desc 描述（base64）
     */
    public void setDesc(String desc) {
        this.desc = desc;
    }
    /**
     * @param device 会议室设备
     */
    public V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo device(String device) {
        this.device = device;
        return this;
    }
    /**
     * @return device 会议室设备
     **/
    public String getDevice() {
        return device;
    }

    /**
     * @param device 会议室设备
     */
    public void setDevice(String device) {
        this.device = device;
    }
    /**
     * @param floor 楼层
     */
    public V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo floor(String floor) {
        this.floor = floor;
        return this;
    }
    /**
     * @return floor 楼层
     **/
    public String getFloor() {
        return floor;
    }

    /**
     * @param floor 楼层
     */
    public void setFloor(String floor) {
        this.floor = floor;
    }
    /**
     * @param meetingRoomName 会议室名称
     */
    public V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo meetingRoomName(String meetingRoomName) {
        this.meetingRoomName = meetingRoomName;
        return this;
    }
    /**
     * @return meetingRoomName 会议室名称
     **/
    public String getMeetingRoomName() {
        return meetingRoomName;
    }

    /**
     * @param meetingRoomName 会议室名称
     */
    public void setMeetingRoomName(String meetingRoomName) {
        this.meetingRoomName = meetingRoomName;
    }
    /**
     * @param participantNumber 容纳人数
     */
    public V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo participantNumber(Long participantNumber) {
        this.participantNumber = participantNumber;
        return this;
    }
    /**
     * @return participantNumber 容纳人数
     **/
    public Long getParticipantNumber() {
        return participantNumber;
    }

    /**
     * @param participantNumber 容纳人数
     */
    public void setParticipantNumber(Long participantNumber) {
        this.participantNumber = participantNumber;
    }
    /**
     * @param password 管理员密码（base64）
     */
    public V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo password(String password) {
        this.password = password;
        return this;
    }
    /**
     * @return password 管理员密码（base64）
     **/
    public String getPassword() {
        return password;
    }

    /**
     * @param password 管理员密码（base64）
     */
    public void setPassword(String password) {
        this.password = password;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo v1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo = (V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo) o;
        return Objects.equals(this.building, v1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo.building) &&
            Objects.equals(this.city, v1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo.city) &&
            Objects.equals(this.desc, v1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo.desc) &&
            Objects.equals(this.device, v1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo.device) &&
            Objects.equals(this.floor, v1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo.floor) &&
            Objects.equals(this.meetingRoomName, v1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo.meetingRoomName) &&
            Objects.equals(this.participantNumber, v1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo.participantNumber) &&
            Objects.equals(this.password, v1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo.password);
    }

    @Override
    public int hashCode() {
        return Objects.hash(building, city, desc, device, floor, meetingRoomName, participantNumber, password);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingRoomsMeetingRoomIdGet200ResponseBasicInfo {\n");
        sb.append("    building: ").append(toIndentedString(building)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
        sb.append("    device: ").append(toIndentedString(device)).append("\n");
        sb.append("    floor: ").append(toIndentedString(floor)).append("\n");
        sb.append("    meetingRoomName: ").append(toIndentedString(meetingRoomName)).append("\n");
        sb.append("    participantNumber: ").append(toIndentedString(participantNumber)).append("\n");
        sb.append("    password: ").append(toIndentedString(password)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

