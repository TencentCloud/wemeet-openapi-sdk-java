/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.records.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1RecordsSettingsMeetingRecordIdPutRequest
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1RecordsSettingsMeetingRecordIdPutRequest {
    @JsonProperty(value = "meeting_id")
    private String meetingId;

    @JsonProperty(value = "operator_id", required = true)
    private String operatorId;

    @JsonProperty(value = "operator_id_type", required = true)
    private Long operatorIdType;

    @JsonProperty(value = "sharing_config")
    private V1RecordsSettingsMeetingRecordIdPutRequestSharingConfig sharingConfig;

    /**
     * @param operatorId 操作者ID (required)
     * @param operatorIdType 操作者ID的类型。3. rooms_id 说明：当前仅支持 rooms_id。如操作者为企业内 userid 或 openId，请使用 userid 字段。 (required)
     */
    public V1RecordsSettingsMeetingRecordIdPutRequest(@NotNull String operatorId, @NotNull Long operatorIdType) {
        this.operatorId = operatorId;
        this.operatorIdType = operatorIdType;
    }

    /**
     * @param meetingId 会议id
     */
    public V1RecordsSettingsMeetingRecordIdPutRequest meetingId(String meetingId) {
        this.meetingId = meetingId;
        return this;
    }
    /**
     * @return meetingId 会议id
     **/
    public String getMeetingId() {
        return meetingId;
    }

    /**
     * @param meetingId 会议id
     */
    public void setMeetingId(String meetingId) {
        this.meetingId = meetingId;
    }
    /**
     * @param operatorId 操作者ID (required)
     */
    public V1RecordsSettingsMeetingRecordIdPutRequest operatorId(@NotNull String operatorId) {
        this.operatorId = operatorId;
        return this;
    }
    /**
     * @return operatorId 操作者ID
     **/
    public String getOperatorId() {
        return operatorId;
    }

    /**
     * @param operatorId 操作者ID (required)
     */
    public void setOperatorId(String operatorId) {
        this.operatorId = operatorId;
    }
    /**
     * @param operatorIdType 操作者ID的类型。3. rooms_id 说明：当前仅支持 rooms_id。如操作者为企业内 userid 或 openId，请使用 userid 字段。 (required)
     */
    public V1RecordsSettingsMeetingRecordIdPutRequest operatorIdType(@NotNull Long operatorIdType) {
        this.operatorIdType = operatorIdType;
        return this;
    }
    /**
     * @return operatorIdType 操作者ID的类型。3. rooms_id 说明：当前仅支持 rooms_id。如操作者为企业内 userid 或 openId，请使用 userid 字段。
     **/
    public Long getOperatorIdType() {
        return operatorIdType;
    }

    /**
     * @param operatorIdType 操作者ID的类型。3. rooms_id 说明：当前仅支持 rooms_id。如操作者为企业内 userid 或 openId，请使用 userid 字段。 (required)
     */
    public void setOperatorIdType(Long operatorIdType) {
        this.operatorIdType = operatorIdType;
    }
    /**
     * @param sharingConfig 
     */
    public V1RecordsSettingsMeetingRecordIdPutRequest sharingConfig(V1RecordsSettingsMeetingRecordIdPutRequestSharingConfig sharingConfig) {
        this.sharingConfig = sharingConfig;
        return this;
    }
    /**
     * @return sharingConfig 
     **/
    public V1RecordsSettingsMeetingRecordIdPutRequestSharingConfig getSharingConfig() {
        return sharingConfig;
    }

    /**
     * @param sharingConfig 
     */
    public void setSharingConfig(V1RecordsSettingsMeetingRecordIdPutRequestSharingConfig sharingConfig) {
        this.sharingConfig = sharingConfig;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1RecordsSettingsMeetingRecordIdPutRequest v1RecordsSettingsMeetingRecordIdPutRequest = (V1RecordsSettingsMeetingRecordIdPutRequest) o;
        return Objects.equals(this.meetingId, v1RecordsSettingsMeetingRecordIdPutRequest.meetingId) &&
            Objects.equals(this.operatorId, v1RecordsSettingsMeetingRecordIdPutRequest.operatorId) &&
            Objects.equals(this.operatorIdType, v1RecordsSettingsMeetingRecordIdPutRequest.operatorIdType) &&
            Objects.equals(this.sharingConfig, v1RecordsSettingsMeetingRecordIdPutRequest.sharingConfig);
    }

    @Override
    public int hashCode() {
        return Objects.hash(meetingId, operatorId, operatorIdType, sharingConfig);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1RecordsSettingsMeetingRecordIdPutRequest {\n");
        sb.append("    meetingId: ").append(toIndentedString(meetingId)).append("\n");
        sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
        sb.append("    operatorIdType: ").append(toIndentedString(operatorIdType)).append("\n");
        sb.append("    sharingConfig: ").append(toIndentedString(sharingConfig)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

