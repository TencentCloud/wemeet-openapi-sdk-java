/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.layout.model;

import java.util.*;

import com.fasterxml.jackson.annotation.*;

/**
 * V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner {
    @JsonProperty(value = "layout_id")
    private String layoutId;

    @JsonProperty(value = "layout_name")
    private String layoutName;

    @JsonProperty(value = "page_list")
    private List<V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner> pageList;

    /**
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner() {
    }

    /**
     * @param layoutId 布局 ID
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner layoutId(String layoutId) {
        this.layoutId = layoutId;
        return this;
    }
    /**
     * @return layoutId 布局 ID
     **/
    public String getLayoutId() {
        return layoutId;
    }

    /**
     * @param layoutId 布局 ID
     */
    public void setLayoutId(String layoutId) {
        this.layoutId = layoutId;
    }
    /**
     * @param layoutName 布局名称
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner layoutName(String layoutName) {
        this.layoutName = layoutName;
        return this;
    }
    /**
     * @return layoutName 布局名称
     **/
    public String getLayoutName() {
        return layoutName;
    }

    /**
     * @param layoutName 布局名称
     */
    public void setLayoutName(String layoutName) {
        this.layoutName = layoutName;
    }
    /**
     * @param pageList 布局单页对象列表
     */
    public V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner pageList(List<V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner> pageList) {
        this.pageList = pageList;
        return this;
    }
    /**
     * @return pageList 布局单页对象列表
     **/
    public List<V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner> getPageList() {
        return pageList;
    }

    /**
     * @param pageList 布局单页对象列表
     */
    public void setPageList(List<V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInnerPageListInner> pageList) {
        this.pageList = pageList;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner v1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner = (V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner) o;
        return Objects.equals(this.layoutId, v1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner.layoutId) &&
            Objects.equals(this.layoutName, v1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner.layoutName) &&
            Objects.equals(this.pageList, v1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner.pageList);
    }

    @Override
    public int hashCode() {
        return Objects.hash(layoutId, layoutName, pageList);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingsMeetingIdAdvancedLayoutsPost200ResponseLayoutListInner {\n");
        sb.append("    layoutId: ").append(toIndentedString(layoutId)).append("\n");
        sb.append("    layoutName: ").append(toIndentedString(layoutName)).append("\n");
        sb.append("    pageList: ").append(toIndentedString(pageList)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

