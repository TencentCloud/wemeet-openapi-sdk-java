/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.meeting_room.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1RoomsInventoryGet200Response
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1RoomsInventoryGet200Response {
    @JsonProperty(value = "normal_count")
    private Long normalCount;

    @JsonProperty(value = "normal_expired_count")
    private Long normalExpiredCount;

    @JsonProperty(value = "normal_used_count")
    private Long normalUsedCount;

    @JsonProperty(value = "special_count")
    private Long specialCount;

    @JsonProperty(value = "special_expired_count")
    private Long specialExpiredCount;

    @JsonProperty(value = "special_used_count")
    private Long specialUsedCount;

    /**
     */
    public V1RoomsInventoryGet200Response() {
    }

    /**
     * @param normalCount 普通设备数
     */
    public V1RoomsInventoryGet200Response normalCount(Long normalCount) {
        this.normalCount = normalCount;
        return this;
    }
    /**
     * @return normalCount 普通设备数
     **/
    public Long getNormalCount() {
        return normalCount;
    }

    /**
     * @param normalCount 普通设备数
     */
    public void setNormalCount(Long normalCount) {
        this.normalCount = normalCount;
    }
    /**
     * @param normalExpiredCount 普通设备过期数
     */
    public V1RoomsInventoryGet200Response normalExpiredCount(Long normalExpiredCount) {
        this.normalExpiredCount = normalExpiredCount;
        return this;
    }
    /**
     * @return normalExpiredCount 普通设备过期数
     **/
    public Long getNormalExpiredCount() {
        return normalExpiredCount;
    }

    /**
     * @param normalExpiredCount 普通设备过期数
     */
    public void setNormalExpiredCount(Long normalExpiredCount) {
        this.normalExpiredCount = normalExpiredCount;
    }
    /**
     * @param normalUsedCount 普通设备使用数
     */
    public V1RoomsInventoryGet200Response normalUsedCount(Long normalUsedCount) {
        this.normalUsedCount = normalUsedCount;
        return this;
    }
    /**
     * @return normalUsedCount 普通设备使用数
     **/
    public Long getNormalUsedCount() {
        return normalUsedCount;
    }

    /**
     * @param normalUsedCount 普通设备使用数
     */
    public void setNormalUsedCount(Long normalUsedCount) {
        this.normalUsedCount = normalUsedCount;
    }
    /**
     * @param specialCount 专款设备数
     */
    public V1RoomsInventoryGet200Response specialCount(Long specialCount) {
        this.specialCount = specialCount;
        return this;
    }
    /**
     * @return specialCount 专款设备数
     **/
    public Long getSpecialCount() {
        return specialCount;
    }

    /**
     * @param specialCount 专款设备数
     */
    public void setSpecialCount(Long specialCount) {
        this.specialCount = specialCount;
    }
    /**
     * @param specialExpiredCount 专款设备过期数
     */
    public V1RoomsInventoryGet200Response specialExpiredCount(Long specialExpiredCount) {
        this.specialExpiredCount = specialExpiredCount;
        return this;
    }
    /**
     * @return specialExpiredCount 专款设备过期数
     **/
    public Long getSpecialExpiredCount() {
        return specialExpiredCount;
    }

    /**
     * @param specialExpiredCount 专款设备过期数
     */
    public void setSpecialExpiredCount(Long specialExpiredCount) {
        this.specialExpiredCount = specialExpiredCount;
    }
    /**
     * @param specialUsedCount 专款设备使用数
     */
    public V1RoomsInventoryGet200Response specialUsedCount(Long specialUsedCount) {
        this.specialUsedCount = specialUsedCount;
        return this;
    }
    /**
     * @return specialUsedCount 专款设备使用数
     **/
    public Long getSpecialUsedCount() {
        return specialUsedCount;
    }

    /**
     * @param specialUsedCount 专款设备使用数
     */
    public void setSpecialUsedCount(Long specialUsedCount) {
        this.specialUsedCount = specialUsedCount;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1RoomsInventoryGet200Response v1RoomsInventoryGet200Response = (V1RoomsInventoryGet200Response) o;
        return Objects.equals(this.normalCount, v1RoomsInventoryGet200Response.normalCount) &&
            Objects.equals(this.normalExpiredCount, v1RoomsInventoryGet200Response.normalExpiredCount) &&
            Objects.equals(this.normalUsedCount, v1RoomsInventoryGet200Response.normalUsedCount) &&
            Objects.equals(this.specialCount, v1RoomsInventoryGet200Response.specialCount) &&
            Objects.equals(this.specialExpiredCount, v1RoomsInventoryGet200Response.specialExpiredCount) &&
            Objects.equals(this.specialUsedCount, v1RoomsInventoryGet200Response.specialUsedCount);
    }

    @Override
    public int hashCode() {
        return Objects.hash(normalCount, normalExpiredCount, normalUsedCount, specialCount, specialExpiredCount, specialUsedCount);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1RoomsInventoryGet200Response {\n");
        sb.append("    normalCount: ").append(toIndentedString(normalCount)).append("\n");
        sb.append("    normalExpiredCount: ").append(toIndentedString(normalExpiredCount)).append("\n");
        sb.append("    normalUsedCount: ").append(toIndentedString(normalUsedCount)).append("\n");
        sb.append("    specialCount: ").append(toIndentedString(specialCount)).append("\n");
        sb.append("    specialExpiredCount: ").append(toIndentedString(specialExpiredCount)).append("\n");
        sb.append("    specialUsedCount: ").append(toIndentedString(specialUsedCount)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

