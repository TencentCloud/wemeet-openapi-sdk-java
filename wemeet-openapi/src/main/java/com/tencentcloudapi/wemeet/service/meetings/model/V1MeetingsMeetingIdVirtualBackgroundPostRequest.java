/*
 * 腾讯会议OpenAPI
 * SAAS版RESTFUL风格API
 *
 * The version of the OpenAPI document: v1.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.tencentcloudapi.wemeet.service.meetings.model;

import java.util.*;
import java.math.BigDecimal;

import com.fasterxml.jackson.annotation.*;
import org.jetbrains.annotations.NotNull;

/**
 * V1MeetingsMeetingIdVirtualBackgroundPostRequest
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonIgnoreProperties(ignoreUnknown = true)
public class V1MeetingsMeetingIdVirtualBackgroundPostRequest {
    @JsonProperty(value = "image")
    private String image;

    @JsonProperty(value = "instanceid", required = true)
    private Long instanceid;

    @JsonProperty(value = "operator_id", required = true)
    private String operatorId;

    @JsonProperty(value = "operator_id_type", required = true)
    private Long operatorIdType;

    @JsonProperty(value = "type", required = true)
    private Long type;

    @JsonProperty(value = "users")
    private List<String> users;

    /**
     * @param instanceid 用户的终端设备类型： 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：Linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS (required)
     * @param operatorId 操作者ID (required)
     * @param operatorIdType 操作者ID类型。1-userid，2-opened (required)
     * @param type 背景生效类型。0-全部用户，1-部分用户 (required)
     */
    public V1MeetingsMeetingIdVirtualBackgroundPostRequest(@NotNull Long instanceid, @NotNull String operatorId, @NotNull Long operatorIdType, @NotNull Long type) {
        this.instanceid = instanceid;
        this.operatorId = operatorId;
        this.operatorIdType = operatorIdType;
        this.type = type;
    }

    /**
     * @param image 背景图片 url，尺寸大小为1920*1080，小于10M，jpg/png/jpeg 格式如果不传入则使用会议室默认虚拟背景。
     */
    public V1MeetingsMeetingIdVirtualBackgroundPostRequest image(String image) {
        this.image = image;
        return this;
    }
    /**
     * @return image 背景图片 url，尺寸大小为1920*1080，小于10M，jpg/png/jpeg 格式如果不传入则使用会议室默认虚拟背景。
     **/
    public String getImage() {
        return image;
    }

    /**
     * @param image 背景图片 url，尺寸大小为1920*1080，小于10M，jpg/png/jpeg 格式如果不传入则使用会议室默认虚拟背景。
     */
    public void setImage(String image) {
        this.image = image;
    }
    /**
     * @param instanceid 用户的终端设备类型： 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：Linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS (required)
     */
    public V1MeetingsMeetingIdVirtualBackgroundPostRequest instanceid(@NotNull Long instanceid) {
        this.instanceid = instanceid;
        return this;
    }
    /**
     * @return instanceid 用户的终端设备类型： 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：Linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS
     **/
    public Long getInstanceid() {
        return instanceid;
    }

    /**
     * @param instanceid 用户的终端设备类型： 0：PSTN 1：PC 2：Mac 3：Android 4：iOS 5：Web 6：iPad 7：Android Pad 8：小程序 9：voip、sip 设备 10：Linux 20：Rooms for Touch Windows 21：Rooms for Touch MacOS 22：Rooms for Touch Android 30：Controller for Touch Windows 32：Controller for Touch Android 33：Controller for Touch iOS (required)
     */
    public void setInstanceid(Long instanceid) {
        this.instanceid = instanceid;
    }
    /**
     * @param operatorId 操作者ID (required)
     */
    public V1MeetingsMeetingIdVirtualBackgroundPostRequest operatorId(@NotNull String operatorId) {
        this.operatorId = operatorId;
        return this;
    }
    /**
     * @return operatorId 操作者ID
     **/
    public String getOperatorId() {
        return operatorId;
    }

    /**
     * @param operatorId 操作者ID (required)
     */
    public void setOperatorId(String operatorId) {
        this.operatorId = operatorId;
    }
    /**
     * @param operatorIdType 操作者ID类型。1-userid，2-opened (required)
     */
    public V1MeetingsMeetingIdVirtualBackgroundPostRequest operatorIdType(@NotNull Long operatorIdType) {
        this.operatorIdType = operatorIdType;
        return this;
    }
    /**
     * @return operatorIdType 操作者ID类型。1-userid，2-opened
     **/
    public Long getOperatorIdType() {
        return operatorIdType;
    }

    /**
     * @param operatorIdType 操作者ID类型。1-userid，2-opened (required)
     */
    public void setOperatorIdType(Long operatorIdType) {
        this.operatorIdType = operatorIdType;
    }
    /**
     * @param type 背景生效类型。0-全部用户，1-部分用户 (required)
     */
    public V1MeetingsMeetingIdVirtualBackgroundPostRequest type(@NotNull Long type) {
        this.type = type;
        return this;
    }
    /**
     * @return type 背景生效类型。0-全部用户，1-部分用户
     **/
    public Long getType() {
        return type;
    }

    /**
     * @param type 背景生效类型。0-全部用户，1-部分用户 (required)
     */
    public void setType(Long type) {
        this.type = type;
    }
    /**
     * @param users userid数组
     */
    public V1MeetingsMeetingIdVirtualBackgroundPostRequest users(List<String> users) {
        this.users = users;
        return this;
    }
    /**
     * @return users userid数组
     **/
    public List<String> getUsers() {
        return users;
    }

    /**
     * @param users userid数组
     */
    public void setUsers(List<String> users) {
        this.users = users;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        V1MeetingsMeetingIdVirtualBackgroundPostRequest v1MeetingsMeetingIdVirtualBackgroundPostRequest = (V1MeetingsMeetingIdVirtualBackgroundPostRequest) o;
        return Objects.equals(this.image, v1MeetingsMeetingIdVirtualBackgroundPostRequest.image) &&
            Objects.equals(this.instanceid, v1MeetingsMeetingIdVirtualBackgroundPostRequest.instanceid) &&
            Objects.equals(this.operatorId, v1MeetingsMeetingIdVirtualBackgroundPostRequest.operatorId) &&
            Objects.equals(this.operatorIdType, v1MeetingsMeetingIdVirtualBackgroundPostRequest.operatorIdType) &&
            Objects.equals(this.type, v1MeetingsMeetingIdVirtualBackgroundPostRequest.type) &&
            Objects.equals(this.users, v1MeetingsMeetingIdVirtualBackgroundPostRequest.users);
    }

    @Override
    public int hashCode() {
        return Objects.hash(image, instanceid, operatorId, operatorIdType, type, users);
    }

    /**
    * Convert the given object to string with each line indented by 4 spaces
    * (except the first line).
    */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class V1MeetingsMeetingIdVirtualBackgroundPostRequest {\n");
        sb.append("    image: ").append(toIndentedString(image)).append("\n");
        sb.append("    instanceid: ").append(toIndentedString(instanceid)).append("\n");
        sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
        sb.append("    operatorIdType: ").append(toIndentedString(operatorIdType)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    users: ").append(toIndentedString(users)).append("\n");
        sb.append("}");
        return sb.toString();
    }
}

